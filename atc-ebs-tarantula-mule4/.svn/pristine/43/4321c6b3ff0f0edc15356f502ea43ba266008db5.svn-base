package com.atc.esb.tarantula;

import java.sql.SQLDataException;

import org.apache.cxf.interceptor.Fault;
import org.apache.cxf.message.Message;
import org.apache.cxf.phase.AbstractPhaseInterceptor;
import org.apache.cxf.phase.Phase;
import org.mule.DefaultMuleMessage;
import org.mule.api.MuleContext;
import org.mule.api.MuleEvent;
import org.mule.api.context.MuleContextAware;
import org.mule.module.cxf.CxfConstants;

@SuppressWarnings("rawtypes")
public class CustomSoapFaultOutInterceptor extends AbstractPhaseInterceptor implements MuleContextAware {

	private MuleContext context;

	public CustomSoapFaultOutInterceptor() {
		super(Phase.MARSHAL);
	}

	@Override
	public void setMuleContext(MuleContext context) {
		this.context = context;
	}

	@Override
	public void handleMessage(Message message) throws Fault {
        MuleEvent event = (MuleEvent) message.getExchange().get(CxfConstants.MULE_EVENT);
        DefaultMuleMessage muleMessage = (DefaultMuleMessage) event.getMessage();
        Throwable exc = message.getContent(Exception.class).getCause();
        Throwable exception = null;
        if (exc instanceof SQLDataException) {
        	exception = (SQLDataException)message.getContent(Exception.class).getCause().getCause();
        }
        muleMessage.setPayload(exception);
	}

	public MuleContext getContext() {
		return context;
	}

	public void setContext(MuleContext context) {
		this.context = context;
	}
}