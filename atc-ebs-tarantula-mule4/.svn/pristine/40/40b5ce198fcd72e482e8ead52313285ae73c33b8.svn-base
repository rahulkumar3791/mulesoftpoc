<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:mule-ss="http://www.mulesoft.org/schema/mule/spring-security"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata"
	xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:quartz="http://www.mulesoft.org/schema/mule/quartz"
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/spring-security http://www.mulesoft.org/schema/mule/spring-security/current/mule-spring-security.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/quartz http://www.mulesoft.org/schema/mule/quartz/current/mule-quartz.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-current.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<flow name="Purchase-Requistion-MainFlow">
		<quartz:inbound-endpoint jobName="PurchaseRequisition"
			cronExpression="${purchaserequisition.cron.expr}" repeatInterval="0"
			responseTimeout="10000" doc:name="Quartz">
			<quartz:event-generator-job />
		</quartz:inbound-endpoint>
		<set-variable variableName="flowName" value="#['Purchase Requisition']"
			doc:name="flowName" />
		<set-variable variableName="ip"
			value="#[message.inboundProperties['X-Forwarded-For']]" doc:name="Set ip" />

		<logger
			message="-----------------------Starting Purchase Requisition Quartz Flow,Cron Scheduler is ${cron.schedule}--------------------------------"
			level="INFO" doc:name="Log Starting Flow" />
		<set-variable variableName="cron" value="${cron.schedule}"
			doc:name="cronScheduler" />
		<choice doc:name="Choice">
			<when expression="flowVars.cron =='OFF'">
				<logger
					message="#['As cron.schedule property is OFF, please Invoke service Using HTTP endpoint']"
					level="INFO" doc:name="Logger" />
			</when>
			<otherwise>
				<flow-ref name="purchase-requistion-main-Flow" doc:name="purchase-requistion-main-Flow" />
			</otherwise>
		</choice>
		<exception-strategy ref="exceptionhandlingChoice_Exception_Strategy"
			doc:name="Reference Exception Strategy" />
	</flow>
	<flow name="Purchase-Requistion-http-flow">
		<http:listener config-ref="HTTP_Listener_Configuration"
			path="/purchaserequisition" allowedMethods="GET" doc:name="HTTP" />
		<mule-ss:http-security-filter realm="mule-realm"></mule-ss:http-security-filter>
		<set-variable variableName="flowName" value="#['Purchase Requisition']"
			doc:name="flowName" />
		<set-variable variableName="ip"
			value="#[message.inboundProperties['X-Forwarded-For']]" doc:name="Set ip" />

		<logger
			message="#['-------------------------------Starting '+flowVars.flowName +' flow-------------------------------']"
			level="INFO" doc:name="Log Start of Flow" />
		<flow-ref name="purchase-requistion-main-Flow" doc:name="purchase-requistion-main-Flow" />
		<exception-strategy ref="exceptionhandlingChoice_Exception_Strategy"
			doc:name="Reference Exception Strategy" />
	</flow>
	<flow name="purchase-requistion-main-Flow">
		<ee:multi-transactional action="ALWAYS_BEGIN"
			doc:name="Transactional">
			<flow-ref name="Purchase-Requistion-MainLogicFlow" doc:name="Purchase-Requistion-MainLogicFlow" />
		</ee:multi-transactional>
		<choice doc:name="Choice">
			<when expression="flowVars.flag == 0">
				<flow-ref name="Purachase-Requisition-FinalMessage-subFlow"
					doc:name="Purachase-Requisition-FinalMessage-subFlow" />
			</when>
			<otherwise>
				<dw:transform-message doc:name="Transform Message">
					<dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	message 		: "Flow has been completed with errors",
	InterfaceName	: "Purchase Requisition : Oracle to Tarantula"
}]]></dw:set-payload>
				</dw:transform-message>
			</otherwise>
		</choice>
	</flow>

	<flow name="Purchase-Requistion-MainLogicFlow">
		<set-variable variableName="interfaceNumber" value="${interface.id.project.site}"
			doc:name="interfaceNumber" />
		<set-variable variableName="interface_type" value="${interface.type}"
			doc:name="interfaceType" />

		<set-variable variableName="flowName" value="#['TT_PR_DETAILS']"
			doc:name="InterfaceName" />
		<flow-ref name="ControlFlow-Read-LastRunDateFlow" doc:name="ControlFlow-Read-LastRunDateFlow" />

		<flow-ref name="Purachese-Requisition-ReadFromOracle-subFlow"
			doc:name="Purachese-Requisition-ReadFromOracle-subFlow" />
		<choice doc:name="Choice">
			<when expression="payload.size()==0">
				<logger message="No Records to Update" level="INFO" doc:name="Logger" />
			</when>
			<otherwise>
				<flow-ref name="Purachese-Requisition-write-to-TT-subFlow"
					doc:name="Purachese-Requisition-write-to-TT-subFlow" />
				<flow-ref name="Purchase-Requisition-Get-maxLastRunDateSub_Flow"
					doc:name="Purchase-Requisition-Get-maxLastRunDateSub_Flow" />

				<flow-ref name="Purchase-Requisition-ControlTable-Update-subFlow"
					doc:name="Purchase-Requisition-ControlTable-Update-subFlow" />
				<flow-ref name="successMail_Sub_Flow" doc:name="successMail_Sub_Flow" />
				<flow-ref name="getAuditDataFlow" doc:name="getAuditDataFlow" />

			</otherwise>
		</choice>
		<set-variable variableName="flag" value="#[0]" doc:name="flag" />

		<exception-strategy ref="exceptionhandlingChoice_Exception_Strategy"
			doc:name="Reference Exception Strategy" />

	</flow>
	<sub-flow name="Purachese-Requisition-ReadFromOracle-subFlow">
		<logger message="Reading Oracle Data" level="INFO"
			doc:name="Log Reading Data from Oracle" />
		<db:select config-ref="Oracle_Configuration" doc:name="Oracle Database">
			<db:dynamic-query><![CDATA[SELECT PR.PR_HEADER_ID,PR.PR_NUMBER,PR.PR_STATUS,PR.PR_DESCRIPTION,TTID, PR.PR_LINE_ID,PR.PR_LINE_NUMBER,PR.PR_LINE_STATUS,
PR.ITEM_CODE,PR.ITEM_DESCRIPTION,
DECODE(PR.ITEM_CATEGORY, 
'Airconditioner' , DECODE(LK.ITEM_CODE, null,PR.ITEM_CATEGORY||'-Others',PR.ITEM_CATEGORY),
'Battery Bank' , DECODE(LK.ITEM_CODE, null,PR.ITEM_CATEGORY||'-Others',PR.ITEM_CATEGORY),
'DG' , DECODE(LK.ITEM_CODE, null,PR.ITEM_CATEGORY||'-Others',PR.ITEM_CATEGORY),
'Shelter' , DECODE(LK.ITEM_CODE, null,PR.ITEM_CATEGORY||'-Others',PR.ITEM_CATEGORY),
'SMPS' , DECODE(LK.ITEM_CODE, null,PR.ITEM_CATEGORY||'-Others',PR.ITEM_CATEGORY),
'TOWER' , DECODE(LK.ITEM_CODE, null,PR.ITEM_CATEGORY||'-Others',PR.ITEM_CATEGORY),
PR.ITEM_CATEGORY
) "ITEM_CATEGORY",
PR.UOM_CODE, to_char(PR.NEED_BY_DATE,'yyyy-mm-dd HH24:MI:SS') "NEED_BY_DATE",
PR.QUANTITY,PRICE, PR.LINE_VALUE ,PR.PROJECT_NAME,PR.SUPPLIER_NAME,
to_char(PR.CREATION_DATE,'yyyy-mm-dd HH24:MI:SS') "CREATION_DATE",
to_char(PR.LAST_UPDATE_DATE,'yyyy-mm-dd HH24:MI:SS') "LAST_UPDATE_DATE",
PR.PO_NUMBER,PR.PO_STATUS,PR.MO_NUMBER, PR.MO_STATUS
FROM XXATC.ATC_PO_IND_SVCS_PR_TT_V PR LEFT JOIN XXATC.ATC_IND_ITEM_CODE_LOOKUP LK
ON PR.ITEM_CODE = LK.ITEM_CODE
WHERE PR.LAST_UPDATE_DATE > to_date('#[flowVars.lastRunDate]','dd-Mon-yyyy HH24:MI:SS')]]></db:dynamic-query>

		</db:select>
		<dw:transform-message doc:name="singleQuoteEscape-Transform Message">
			<dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map ((payload01 , indexOfPayload01) -> {
		PR_HEADER_ID		:	(payload01.PR_HEADER_ID replace "'" with "''") when (payload01.PR_HEADER_ID != null) otherwise payload01.PR_HEADER_ID,
		PR_NUMBER			: 	(payload01.PR_NUMBER replace "'" with "''") when (payload01.PR_NUMBER != null) otherwise payload01.PR_NUMBER,
		PR_STATUS  			:	(payload01.PR_STATUS replace "'" with "''") when (payload01.PR_STATUS != null) otherwise payload01.PR_STATUS,
		PR_DESCRIPTION  	:	(payload01.PR_DESCRIPTION replace "'" with "''") when (payload01.PR_DESCRIPTION != null) otherwise payload01.PR_DESCRIPTION,
		TTID       			:	(payload01.TTID replace "'" with "''") when (payload01.TTID != null) otherwise payload01.TTID,
		PR_LINE_ID 			:	(payload01.PR_LINE_ID replace "'" with "''") when (payload01.PR_LINE_ID != null) otherwise payload01.PR_LINE_ID,
		PR_LINE_NUMBER   	:	(payload01.PR_LINE_NUMBER replace "'" with "''") when (payload01.PR_LINE_NUMBER != null) otherwise payload01.PR_LINE_NUMBER,
		PR_LINE_STATUS   	:	(payload01.PR_LINE_STATUS replace "'" with "''") when (payload01.PR_LINE_STATUS != null) otherwise payload01.PR_LINE_STATUS,
		ITEM_CODE  			:	(payload01.ITEM_CODE replace "'" with "''") when (payload01.ITEM_CODE != null) otherwise payload01.ITEM_CODE,
		ITEM_DESCRIPTION 	:	(payload01.ITEM_DESCRIPTION replace "'" with "''") when (payload01.ITEM_DESCRIPTION != null) otherwise payload01.ITEM_DESCRIPTION,
		ITEM_CATEGORY    	:	(payload01.ITEM_CATEGORY replace "'" with "''") when (payload01.ITEM_CATEGORY != null) otherwise payload01.ITEM_CATEGORY,
		UOM_CODE   			:	(payload01.UOM_CODE replace "'" with "''") when (payload01.UOM_CODE != null) otherwise payload01.UOM_CODE,
		NEED_BY_DATE     	:	(payload01.NEED_BY_DATE replace "'" with "''") when (payload01.NEED_BY_DATE != null) otherwise payload01.NEED_BY_DATE,
		QUANTITY   			:	(payload01.QUANTITY replace "'" with "''") when (payload01.QUANTITY != null) otherwise payload01.QUANTITY,
		PRICE      			:	(payload01.PRICE replace "'" with "''") when (payload01.PRICE != null) otherwise payload01.PRICE,
		LINE_VALUE 			:	(payload01.LINE_VALUE replace "'" with "''") when (payload01.LINE_VALUE != null) otherwise payload01.LINE_VALUE,
		PROJECT_NAME		: 	(payload01.PROJECT_NAME replace "'" with "''") when (payload01.PROJECT_NAME != null) otherwise payload01.PROJECT_NAME,
		SUPPLIER_NAME    	:	(payload01.SUPPLIER_NAME replace "'" with "''") when (payload01.SUPPLIER_NAME != null) otherwise payload01.SUPPLIER_NAME,
		CREATION_DATE    	:	(payload01.CREATION_DATE replace "'" with "''") when (payload01.CREATION_DATE != null) otherwise payload01.CREATION_DATE,
		LAST_UPDATE_DATE 	:	(payload01.LAST_UPDATE_DATE replace "'" with "''") when (payload01.LAST_UPDATE_DATE != null) otherwise payload01.LAST_UPDATE_DATE,
		PO_NUMBER  			:	(payload01.PO_NUMBER replace "'" with "''") when (payload01.PO_NUMBER != null) otherwise payload01.PO_NUMBER,
		PO_STATUS  			:	(payload01.PO_STATUS replace "'" with "''") when (payload01.PO_STATUS != null) otherwise payload01.PO_STATUS,
		MO_NUMBER  			:	(payload01.MO_NUMBER replace "'" with "''") when (payload01.MO_NUMBER != null) otherwise payload01.MO_NUMBER,
		MO_STATUS  			:	(payload01.MO_STATUS replace "'" with "''") when (payload01.MO_STATUS != null) otherwise payload01.MO_STATUS
		
		})]]></dw:set-payload>
		</dw:transform-message>


		<dw:transform-message doc:name="Transform Message"
			metadata:id="71eb479c-c547-403f-b294-0f25148eb2e0">
			<dw:input-payload />
			<dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map ((payload01 , indexOfPayload01) -> {
		PR_HEADER_ID		:	payload01.PR_HEADER_ID,
		PR_NUMBER			: 	payload01.PR_NUMBER,
		PR_STATUS  			:	payload01.PR_STATUS,
		PR_DESCRIPTION  	:	"''" when (payload01.PR_DESCRIPTION == null) otherwise "'" ++ payload01.PR_DESCRIPTION ++ "'",
		TTID       			:	"''" when (payload01.TTID == null) otherwise "'" ++ payload01.TTID ++ "'",
		PR_LINE_ID 			:	payload01.PR_LINE_ID,
		PR_LINE_NUMBER   	:	payload01.PR_LINE_NUMBER,
		PR_LINE_STATUS   	:	payload01.PR_LINE_STATUS,
		ITEM_CODE  			:	payload01.ITEM_CODE,
		ITEM_DESCRIPTION 	:	payload01.ITEM_DESCRIPTION,
		ITEM_CATEGORY    	:	payload01.ITEM_CATEGORY,
		UOM_CODE   			:	payload01.UOM_CODE,
		NEED_BY_DATE     	:	"''" when (payload01.NEED_BY_DATE == null) otherwise "'" ++ payload01.NEED_BY_DATE ++ "'",
		QUANTITY   			:	payload01.QUANTITY,
		PRICE      			:	payload01.PRICE,
		LINE_VALUE 			:	payload01.LINE_VALUE,
		PROJECT_NAME		: 	"NULL" when (payload01.PROJECT_NAME == null) otherwise "'" ++ payload01.PROJECT_NAME ++ "'",
		SUPPLIER_NAME    	:	"NULL" when (payload01.SUPPLIER_NAME == null) otherwise "'" ++ payload01.SUPPLIER_NAME ++ "'",
		CREATION_DATE    	:	payload01.CREATION_DATE ,
		LAST_UPDATE_DATE 	:	payload01.LAST_UPDATE_DATE,
		PO_NUMBER  			:	"NULL" when (payload01.PO_NUMBER == null) otherwise "'" ++ payload01.PO_NUMBER ++ "'",
		PO_STATUS  			:	"NULL" when (payload01.PO_STATUS == null) otherwise "'" ++ payload01.PO_STATUS ++ "'",
		MO_NUMBER  			:	"NULL" when (payload01.MO_NUMBER == null) otherwise "'" ++ payload01.MO_NUMBER ++ "'",
		MO_STATUS  			:	"NULL" when (payload01.MO_STATUS == null) otherwise "'" ++ payload01.MO_STATUS ++ "'"
		
		})]]></dw:set-payload>
			<dw:set-variable variableName="ListOfLastUpdatedDate"><![CDATA[%dw 1.0
%output application/java
---
(payload map ((payload01 , indexOfPayload01) -> {
	date: payload01.LAST_UPDATE_DATE
}) orderBy $.date)[-1..0]]]></dw:set-variable>
		</dw:transform-message>

	</sub-flow>
	<sub-flow name="Purachese-Requisition-write-to-TT-subFlow">
		<logger
			message="-----------------------Writing data to TT-----------------------"
			level="INFO" doc:name="Log Writing data to Tarantula" />
		<expression-component doc:name="Define Success List and Failure List"><![CDATA[flowVars.successList = new ArrayList();
flowVars.failureList=new ArrayList();]]></expression-component>
		<scatter-gather doc:name="Scatter-Gather">
			<foreach doc:name="For Each">
				<flow-ref name="ForEachFlow_success-purchase-requistionFlow"
					doc:name="Flow Reference" />
			</foreach>
			<processor-chain>
				<db:insert config-ref="Generic_Database_Configuration"
					bulkMode="true" doc:name="Database">
					<db:dynamic-query><![CDATA[INSERT INTO 
I_PR_PO_ARC (BOQId, PRLineId, PRNumber, PRStatus, PRDescription, TTID, PRLineNumber, PRLineStatus, ItemCode, ItemDescription, ItemName, UOMCode, NeedByDate, Quantity, Price, LineValue, ProjectName, Vendor, PONumber, POStatus, MONumber, MOStatus, CreationDate, LastUpdateDate)
VALUES ('#[payload.PR_HEADER_ID]',#[payload.PR_LINE_ID],'#[payload.PR_NUMBER]','#[payload.PR_STATUS]',#[payload.PR_DESCRIPTION],
#[payload.TTID],'#[payload.PR_LINE_NUMBER]','#[payload.PR_LINE_STATUS]','#[payload.ITEM_CODE]','#[payload.ITEM_DESCRIPTION]',
'#[payload.ITEM_CATEGORY]','#[payload.UOM_CODE]',#[payload.NEED_BY_DATE],#[payload.QUANTITY],#[payload.PRICE],#[payload.LINE_VALUE],
#[payload.PROJECT_NAME],#[payload.SUPPLIER_NAME],#[payload.PO_NUMBER],#[payload.PO_STATUS], #[payload.MO_NUMBER],
#[payload.MO_STATUS],'#[payload.CREATION_DATE]','#[payload.LAST_UPDATE_DATE]')]]></db:dynamic-query>
				</db:insert>
				<logger
					message="=============================Records archived in I_PR_PO_ARC========================================="
					level="INFO" doc:name="Logger" />
			</processor-chain>
		</scatter-gather>

	</sub-flow>
	<flow name="ForEachFlow_success-purchase-requistionFlow">
		<logger
			message="Inserting data in TT PR_NUMBER--------------------------&gt;#[payload.PR_NUMBER] TTID --------------------------&gt;#[payload.TTID]"
			level="INFO" doc:name="Logger" />
		<set-variable variableName="PR_LINE_ID" value="#[payload.PR_LINE_ID]"
			doc:name="Set PR_LINE_ID" />
		<db:execute-ddl config-ref="Generic_Database_Configuration"
			doc:name="Database">
            <db:dynamic-query><![CDATA[IF NOT EXISTS (SELECT * FROM I_PR_PO WHERE PRLineId = #[payload.PR_LINE_ID])

    INSERT INTO I_PR_PO (BOQId, PRLineId, PRNumber, PRStatus, PRDescription, TTID, PRLineNumber, PRLineStatus, ItemCode, ItemDescription, ItemName, UOMCode, 
	NeedByDate, Quantity, Price, LineValue, ProjectName, Vendor, PONumber, POStatus, MONumber, MOStatus, CreationDate, LastUpdateDate)
    VALUES ('#[payload.PR_HEADER_ID]',#[payload.PR_LINE_ID],'#[payload.PR_NUMBER]','#[payload.PR_STATUS]',#[payload.PR_DESCRIPTION],
				#[payload.TTID],'#[payload.PR_LINE_NUMBER]','#[payload.PR_LINE_STATUS]','#[payload.ITEM_CODE]','#[payload.ITEM_DESCRIPTION]',
				'#[payload.ITEM_CATEGORY]','#[payload.UOM_CODE]',#[payload.NEED_BY_DATE],#[payload.QUANTITY],#[payload.PRICE],#[payload.LINE_VALUE],
				#[payload.PROJECT_NAME],#[payload.SUPPLIER_NAME],#[payload.PO_NUMBER],#[payload.PO_STATUS], #[payload.MO_NUMBER],
				#[payload.MO_STATUS],'#[payload.CREATION_DATE]','#[payload.LAST_UPDATE_DATE]')

ELSE

    UPDATE I_PR_PO
    SET BOQId = '#[payload.PR_HEADER_ID]', PRNumber = '#[payload.PR_NUMBER]', PRStatus = '#[payload.PR_STATUS]', PRDescription = #[payload.PR_DESCRIPTION],
		TTID = #[payload.TTID],PRLineNumber = '#[payload.PR_LINE_NUMBER]', PRLineStatus = '#[payload.PR_LINE_STATUS]',ItemCode = '#[payload.ITEM_CODE]',
		ItemDescription = '#[payload.ITEM_DESCRIPTION]', ItemName = '#[payload.ITEM_CATEGORY]', UOMCode = '#[payload.UOM_CODE]',NeedByDate = #[payload.NEED_BY_DATE],
		Quantity = #[payload.QUANTITY],Price = #[payload.PRICE], LineValue = #[payload.LINE_VALUE], ProjectName = #[payload.PROJECT_NAME], 
		Vendor = #[payload.SUPPLIER_NAME], PONumber = #[payload.PO_NUMBER], POStatus = #[payload.PO_STATUS], MONumber = #[payload.MO_NUMBER],
		MOStatus =  #[payload.MO_STATUS], CreationDate ='#[payload.CREATION_DATE]', LastUpdateDate = '#[payload.LAST_UPDATE_DATE]'
    WHERE PRLineId = #[payload.PR_LINE_ID]]]></db:dynamic-query>

		</db:execute-ddl>
		<expression-component doc:name="Add PR_LINE_ID in successList"><![CDATA[flowVars.successList.add(flowVars.PR_LINE_ID) ;]]></expression-component>
		<exception-strategy
			ref="exceptionhandlingChoice_Exception_Strategy_purchaseRequisition"
			doc:name="Reference Exception Strategy" />
	</flow>
	<sub-flow name="Purchase-Requisition-Get-maxLastRunDateSub_Flow">
		<set-variable variableName="lastUpdateDate"
			value="#[flowVars.ListOfLastUpdatedDate[0].date]" doc:name="lastUpdateDate" />
		<set-variable variableName="payloadSize"
			value="#[flowVars.ListOfLastUpdatedDate.size()]" doc:name="payloadSize" />

		<set-variable variableName="totalRecords" value="#[flowVars.payloadSize]"
			doc:name="totalRecords" />
		<logger
			message="maxLastUpdatedDate from TT==&gt; #[flowVars.ListOfLastUpdatedDate[0].date]"
			level="INFO" doc:name="Log maxLastUpdatedDate" />

	</sub-flow>
	<sub-flow name="Purchase-Requisition-ControlTable-Update-subFlow">
		<dw:transform-message doc:name="Transform Message">
			<dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
	flowName : 'TT_PR_DETAILS',
	lastRunDate : flowVars.lastUpdateDate as :localdatetime {format: "yyyy-MM-dd HH:mm:ss"} as :string {format: "dd-MM-yyyy HH:mm:ss"}
}]]></dw:set-payload>

		</dw:transform-message>
		<vm:outbound-endpoint exchange-pattern="request-response"
			path="writeLastRunDate" connector-ref="VM_Control_Table" doc:name="VM" />

	</sub-flow>
	<sub-flow name="Purachase-Requisition-FinalMessage-subFlow">
		<dw:transform-message doc:name="Transform Message">
			<dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	message 		: "Flow Has successfully completed",
	InterfaceName	: flowVars.flowName,
	flow 			: "Purchase Requisition : Oracle to Tarantula",
	recordsProcessed: flowVars.totalRecords
	when flowVars.totalRecords != null otherwise 'No records to update',
	currentLastRun 	: flowVars.lastUpdateDate
					  when flowVars.lastUpdateDate != null
					  otherwise flowVars.lastRunDate
}]]></dw:set-payload>
		</dw:transform-message>
		<logger message="#[message.payloadAs(java.lang.String)]" level="DEBUG"
			doc:name="Log Final Message" />
		<logger
			message="=================End of the Oracle to TT Purchase Requisition flow================="
			level="INFO" doc:name="Log Flow End" />
	</sub-flow>
	<flow name="ForEachFlow_failure_purchaseRequisition">
		<db:select config-ref="Generic_Database_Configuration"
			doc:name="TT Database">
			<db:dynamic-query><![CDATA[SELECT BOQId, PRLineId, PRNumber, PRStatus, PRDescription, TTID, PRLineNumber, PRLineStatus, ItemCode, ItemDescription, ItemName, UOMCode, NeedByDate, Quantity, Price, LineValue, ProjectName, Vendor, PONumber, POStatus, MONumber, MOStatus, CreationDate, LastUpdateDate
FROM I_PR_PO_ARC WHERE PRLineId = #[payload.PR_LINE_ID]]]></db:dynamic-query>

		</db:select>
		<dw:transform-message doc:name="Transform Message">
			<dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map ((payload01 , indexOfPayload01) -> {
	BOQId: payload01.BOQId,
	PRLineId: payload01.PRLineId,
	PRNumber: payload01.PRNumber,
	PRStatus: payload01.PRStatus,
	PRDescription: payload01.PRDescription,
	TTID: payload01.TTID,
	PRLineNumber: payload01.PRLineNumber,
	PRLineStatus: payload01.PRLineStatus,
	ItemCode: payload01.ItemCode,
	ItemDescription: payload01.ItemDescription,
	ItemName: payload01.ItemName,
	UOMCode: payload01.UOMCode,
	NeedByDate: "''" when (payload01.NeedByDate == null) otherwise  payload01.NeedByDate as :string {format: "yyyy-MM-dd HH:mm:ss.S"} ,
	Quantity : payload01.Quantity,
	Price: payload01.Price,
	LineValue: payload01.LineValue,
	ProjectName: payload01.ProjectName,
	Vendor: payload01.Vendor,
	PONumber: payload01.PONumber,
	POStatus: payload01.POStatus,
	MONumber: payload01.MONumber,
	MOStatus: payload01.MOStatus,
	CreationDate: "''" when (payload01.CreationDate == null) otherwise  payload01.CreationDate as :string {format: "yyyy-MM-dd HH:mm:ss.S"} ,
	LastUpdateDate: "''" when (payload01.LastUpdateDate == null) otherwise  payload01.LastUpdateDate as :string {format: "yyyy-MM-dd HH:mm:ss.S"}
	})]]></dw:set-payload>
		</dw:transform-message>
		<logger
			message="Record data from Archive for failed record ----------------------------&gt;#[payload[0].PRLineId] "
			level="INFO" doc:name="Logger" />
		<set-variable variableName="PRLineId" value="#[payload[0].PRLineId]"
			doc:name="Variable" />
		<db:insert config-ref="Generic_Database_Configuration"
			doc:name="TT Database">
			<db:dynamic-query><![CDATA[INSERT INTO I_PR_PO(BOQId, PRLineId, PRNumber, PRStatus, PRDescription, TTID, PRLineNumber, PRLineStatus, ItemCode, ItemDescription, ItemName, UOMCode, NeedByDate, Quantity, Price, LineValue, ProjectName, Vendor, PONumber, POStatus, MONumber, MOStatus, CreationDate, LastUpdateDate)
VALUES ('#[payload[0].BOQId]',#[payload[0].PRLineId],'#[payload[0].PRNumber]','#[payload[0].PRStatus]','#[payload[0].PRDescription]',
'#[payload[0].TTID]','#[payload[0].PRLineNumber]','#[payload[0].PRLineStatus]','#[payload[0].ItemCode]','#[payload[0].ItemDescription]',
'#[payload[0].ItemName]','#[payload[0].UOMCode]','#[payload[0].NeedByDate]',#[payload[0].Quantity],#[payload[0].Price],#[payload[0].LineValue],'#[payload[0].ProjectName]','#[payload[0].Vendor]','#[payload[0].PONumber]','#[payload[0].POStatus]','#[payload[0].MONumber]','#[payload[0].MOStatus]','#[payload[0].CreationDate]','#[payload[0].LastUpdateDate]')]]></db:dynamic-query>





		</db:insert>
		<logger
			message="=================Failed record #[flowVars.PRLineId] inserted successfully in Success Table====================="
			level="INFO" doc:name="Logger" />
		<db:delete config-ref="Oracle_Configuration" doc:name="Database">
			<db:dynamic-query><![CDATA[delete from XXATC.ATC_TT_FAILEDRECORDS where PR_LINE_ID = #[flowVars.PRLineId]]]></db:dynamic-query>


		</db:delete>
		<logger
			message="#[flowVars.PRLineId] has been successfully deleted from failure table after inserting in Success Table"
			level="INFO" doc:name="Logger" />
		<exception-strategy
			ref="exceptionhandlingChoice_Exception_Strategy_failureRetry_purchaseRequisition"
			doc:name="Reference Exception Strategy" />
	</flow>
	<flow name="retryFailedRecord_purchaseRequisition_httpFlow">
		<http:listener config-ref="HTTP_Listener_Configuration"
			path="/retry/projRequisition" doc:name="HTTP" />
		<mule-ss:http-security-filter realm="mule-realm"></mule-ss:http-security-filter>
		<flow-ref name="retryFailedRecordFlow_purchaseRequisition"
			doc:name="Flow Reference" />
		<set-payload value="#[&quot;Failed records reprocessed&quot;]"
			doc:name="Set Payload" />
		<exception-strategy ref="exceptionhandlingChoice_Exception_Strategy"
			doc:name="Reference Exception Strategy" />
	</flow>
	<flow name="retryFailedRecord_purchaseRequisition_quartzFlow">
		<quartz:inbound-endpoint jobName="PurchaseRequisitionRetry"
			cronExpression="${purchaserequisition_retry.cron.expr}"
			repeatInterval="0" responseTimeout="10000" doc:name="Quartz">
			<quartz:event-generator-job />
		</quartz:inbound-endpoint>
		<flow-ref name="retryFailedRecordFlow_purchaseRequisition"
			doc:name="Flow Reference" />
		<exception-strategy ref="exceptionhandlingChoice_Exception_Strategy"
			doc:name="Reference Exception Strategy" />
	</flow>
	<flow name="retryFailedRecordFlow_purchaseRequisition">
		<set-variable variableName="flowName" value="#['TT_PR_DETAILS']"
			doc:name="interfaceName" />
		<db:select config-ref="Oracle_Configuration" doc:name="Database">
			<db:dynamic-query><![CDATA[select distinct PR_LINE_ID from ATC_TT_FAILEDRECORDS where PR_LINE_ID is not null and FLOW_NAME = '#[flowVars.flowName]' and  retry_count < '3']]></db:dynamic-query>

		</db:select>
		<dw:transform-message doc:name="Transform Message">
			<dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map ((payload01 , indexOfPayload01) -> {
		PR_LINE_ID       			:	(payload01.PR_LINE_ID replace "'" with "''") when (payload01.PR_LINE_ID != null) otherwise payload01.PR_LINE_ID
	})]]></dw:set-payload>
		</dw:transform-message>
		<logger message="List of records in failed table--------------&gt;#[payload]"
			level="INFO" doc:name="Logger" />
		<foreach doc:name="For Each">
			<flow-ref name="ForEachFlow_failure_purchaseRequisition"
				doc:name="ForEachFlow_failure" />
		</foreach>
	</flow>
	<flow name="purchase-requisition-archive-purge-HTTP">
		<http:listener config-ref="HTTP_Listener_Configuration"
			path="/purgeArchive/projRequisition" doc:name="HTTP" />
		<mule-ss:http-security-filter realm="mule-realm" />
		<set-variable variableName="ip"
			value="#[message.inboundProperties['X-Forwarded-For']]" doc:name="Set ip" />
		<flow-ref name="purchase-requisition-archive-purge-flow"
			doc:name="Flow Reference purchase-requisition-archive-purge-flow" />
		<logger message="=========Purchase Requisition Archive Table Purged=========="
			level="INFO" doc:name="Logger" />
		<set-payload
			value="#[&quot;Archive Table for Purchase Requisition Purged Successfully&quot;]"
			doc:name="Set Payload" />
		<exception-strategy ref="exceptionhandlingChoice_Exception_Strategy"
			doc:name="Reference Exception Strategy" />
	</flow>
	<flow name="purchase-requisition-archive-purge-quartz">
		<quartz:inbound-endpoint jobName="purchaseRequisitionflowArchivePurge"
			cronExpression="${archive_purge.cron.expr}" repeatInterval="0"
			responseTimeout="10000" doc:name="Quartz">
			<quartz:event-generator-job />
		</quartz:inbound-endpoint>
		<flow-ref name="purchase-requisition-archive-purge-flow"
			doc:name="Flow Reference purchase-requisition-archive-purge-flow" />
		<logger
			message="===========Purchase Requisition Archive Table Purged=============="
			level="INFO" doc:name="Logger" />
		<exception-strategy ref="exceptionhandlingChoice_Exception_Strategy"
			doc:name="Reference Exception Strategy" />
	</flow>
	<sub-flow name="purchase-requisition-archive-purge-flow">
		<set-variable variableName="purgeDate"
			value="#[server.dateTime.plusMonths(-6).format('yyyy-MM-dd HH:mm:ss.S')]"
			doc:name="purgeDate" />
		<logger message="Purging data older than  :: #[flowVars.purgeDate]"
			level="INFO" doc:name="Logger" />
		<db:delete config-ref="Generic_Database_Configuration"
			doc:name="Oracle Database">
			<db:dynamic-query><![CDATA[delete FROM I_PR_PO_ARC WHERE created_on < '#[flowVars.purgeDate]']]></db:dynamic-query>
		</db:delete>
	</sub-flow>
</mule>
