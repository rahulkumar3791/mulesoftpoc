<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:http="http://www.mulesoft.org/schema/mule/http"
	xmlns:json="http://www.mulesoft.org/schema/mule/json" xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:vm="http://www.mulesoft.org/schema/mule/vm" xmlns:smtp="http://www.mulesoft.org/schema/mule/smtp"
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:smtps="http://www.mulesoft.org/schema/mule/smtps" xmlns:mulexml="http://www.mulesoft.org/schema/mule/xml"
	xmlns:data-mapper="http://www.mulesoft.org/schema/mule/ee/data-mapper"
	xmlns:https="http://www.mulesoft.org/schema/mule/https" xmlns:cxf="http://www.mulesoft.org/schema/mule/cxf"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:mule-ss="http://www.mulesoft.org/schema/mule/spring-security"
	xmlns:spring="http://www.springframework.org/schema/beans"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/json http://www.mulesoft.org/schema/mule/json/current/mule-json.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/smtp http://www.mulesoft.org/schema/mule/smtp/current/mule-smtp.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/https http://www.mulesoft.org/schema/mule/https/current/mule-https.xsd
http://www.mulesoft.org/schema/mule/cxf http://www.mulesoft.org/schema/mule/cxf/current/mule-cxf.xsd
http://www.mulesoft.org/schema/mule/ee/jdbc http://www.mulesoft.org/schema/mule/ee/jdbc/current/mule-jdbc-ee.xsd
http://www.mulesoft.org/schema/mule/xml http://www.mulesoft.org/schema/mule/xml/current/mule-xml.xsd
http://www.mulesoft.org/schema/mule/ee/data-mapper http://www.mulesoft.org/schema/mule/ee/data-mapper/current/mule-data-mapper.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/spring-security http://www.mulesoft.org/schema/mule/spring-security/current/mule-spring-security.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd">
	<data-mapper:config name="Map_To_Pojo"
		transformationGraphPath="map_to_pojo.grf" doc:name="Map_To_Pojo" />

	<flow name="tarantula-getRequisitionAndMoveOrderFlow">
		<set-variable variableName="maxRecord" value="${ebs.tarantula.maxRecords}"
			doc:name="Set MaxRecord Value" />
		<set-variable variableName="requestData" value="maxRecord : #[maxRecord]"
			doc:name="Set Request Data" />
		<db:select config-ref="TarantulaDatabase" doc:name="Query Data">
			<db:parameterized-query><![CDATA[SELECT BOQ_ID, BOQ_LINE_ID, GLOBAL_SITE_ID, ITEM_CODE, to_char(NEED_BY_DATE, 'DD-MON-YY') NEED_BY_DATE, QUANTITY, 
MOVE_ORDER_NUMBER, MOVE_ORDER_STATUS, PR_NO, PR_STATUS, PO_NUMBER, PO_STATUS, PROCESS_STATUS, ERROR_DESCRIPTION
FROM XXATC.ATC_INV_IND_TARANTULA_DEMAND_V WHERE ROWNUM <= #[maxRecord]]]></db:parameterized-query>
		</db:select>
		<set-variable variableName="recordCount" value="#[payload.size()]"
			doc:name="Set Record Count Value" />

		<choice doc:name="Data Found?">
			<when expression="#[payload.size() > 0]">
				<data-mapper:transform config-ref="Map_To_Pojo"
					doc:name="Map To Pojo" />
				<logger
					message="[#[message.inboundProperties['X-Forwarded-For']]][GetOrders][Data successfully extracted - Count : #[payload.size()]]"
					level="INFO" doc:name="Log Data Found" />
			</when>
			<otherwise>
				<logger level="INFO" doc:name="Log No Data Found"
					message="[#[message.inboundProperties['X-Forwarded-For']]][GetOrders][No data extracted - Count : 0]" />
			</otherwise>
		</choice>
		<set-variable variableName="responseTime" value="#[server.dateTime]"
			doc:name="Set Response Time" />
		<expression-component doc:name="Total Response Time Calculation"><![CDATA[flowVars.totalTime = (flowVars.responseTime.dayOfYear-flowVars.requestTime.dayOfYear)*(24*60*60*1000)
+(flowVars.responseTime.hours-flowVars.requestTime.hours)*(60*60*1000)
+(flowVars.responseTime.minutes-flowVars.requestTime.minutes)*(60*1000)
+(flowVars.responseTime.seconds-flowVars.requestTime.seconds)*(1000)
+(flowVars.responseTime.milliSeconds-flowVars.requestTime.milliSeconds);]]></expression-component>
		<logger
			message="[#[message.inboundProperties['X-Forwarded-For']]][GetOrders][TotalTime : #[flowVars.totalTime]ms]"
			level="DEBUG" doc:name="Log Total Time" category="com.atc.esb.tarantula" />
		<async doc:name="Audit Data">
			<set-variable variableName="dataDetails"
				value="#['&quot;service&quot;: &quot;' + &quot;Get Requisition And Move Order&quot; + '&quot; , &quot;requesterIp&quot;: &quot;' + message.inboundProperties['X-Forwarded-For']+'&quot; ,&quot;Request Data&quot;:&quot;'+ requestData +'&quot;,&quot;totalTime&quot;:&quot;'+flowVars.totalTime+ 'ms&quot;,&quot;Record Count&quot;:&quot;'+ recordCount +'&quot;,&quot;status&quot;: &quot;Success&quot;']"
				doc:name="Set dataDetails Property" />
			<set-variable variableName="ip"
				value="#[message.inboundProperties['X-Forwarded-For']]" doc:name="Set IP Address" />
			<expression-transformer
				expression="#[groovy:[ &quot;service&quot;: &quot;atc-esb-tarantula&quot;, &quot;timestamp&quot;: new java.util.Date().toString(),&quot;interface_number&quot;: &quot;I-0102&quot;,&quot;interface_type&quot;: &quot;SOAP&quot;,&quot;requester_ip&quot;: ip, &quot;status&quot;: [&quot;code&quot;: &quot;0&quot; , &quot;id&quot;: &quot;&quot;, &quot;message&quot;: &quot;COMPLETE&quot;], &quot;data&quot;: &quot;\&quot;&quot; + dataDetails + &quot;\&quot;&quot;]]"
				doc:name="Map Data" />
			<vm:outbound-endpoint exchange-pattern="one-way"
				path="atc.mule.audit" doc:name="Call Core Audit Service" />
		</async>
		<exception-strategy ref="outboundChoiceExceptionStrategy"
			doc:name="catch Exception" />
	</flow>



	<flow name="tarantula-InsertOrdersFlow">
		<set-payload value="#[payload.Req]" doc:name="Set ListData" />
		<set-variable variableName="size" value="#[payload.size()]"
			doc:name="Set Data Size" />
		<set-variable variableName="ip"
			value="#[message.inboundProperties['X-Forwarded-For']]" doc:name="Set IP Address" />
		<foreach doc:name="For Each">
			<set-variable variableName="requestData"
				value="BoqID: #[payload.BoqID],BoqLineID: #[payload.BoqLineID],ItemCode: #[payload.ItemCode],NeedbyDate: #[payload.NeedbyDate],GlobalSiteID: #[payload.GlobalSiteID],CustomerName: #[payload.CustomerName],SupplierName: #[payload.SupplierName],Quantity: #[payload.Quantity],ServicePurpose: #[payload.ServicePurpose],ServiceDesc: #[payload.ServiceDesc],Requestor: #[payload.Requestor],RequestDate: #[payload.RequestDate],UnitPrice: #[payload.UnitPrice],UOMCode: #[payload.UOMCode]"
				doc:name="Set Request Data" />
			<db:insert config-ref="TarantulaDatabase" doc:name="Insert into Staging Table">
				<db:parameterized-query><![CDATA[insert into XXEXT.ATC_INV_IND_TT_STG(BOQ_ID,BOQ_LINE_ID,ITEM_CODE,NEED_BY_DATE,GLOBAL_SITE_ID,CUSTOMER_NAME,SUPPLIER_NAME,QUANTITY,PURPOSE_OF_SERVICE,DESCRIPTION_OF_SERVICE,REQUESTOR,REQUEST_DATE,UNIT_PRICE,UOM_CODE) values (#[payload.BoqID],#[payload.BoqLineID],#[payload.ItemCode],#[payload.NeedbyDate],#[payload.GlobalSiteID],#[payload.CustomerName],#[payload.SupplierName],#[payload.Quantity],#[payload.ServicePurpose],#[payload.ServiceDesc],#[payload.Requestor],#[payload.RequestDate],#[payload.UnitPrice],#[payload.UOMCode])]]></db:parameterized-query>
			</db:insert>
			<set-variable variableName="dataDetails"
				value="#['&quot;service&quot;: &quot;' + &quot;Insert Orders&quot; + '&quot; , &quot;requesterIp&quot;: &quot;' + message.inboundProperties['X-Forwarded-For']+ '&quot; ,&quot;Request Data&quot;:&quot;'+ requestData +'&quot;,&quot;status&quot;: &quot;Success&quot;']"
				doc:name="Set dataDetails Property" />
			<expression-transformer
				expression="#[groovy:[ &quot;service&quot;: &quot;atc-esb-tarantula&quot;, &quot;timestamp&quot;: new java.util.Date().toString(),&quot;interface_number&quot;: &quot;I-0102&quot;,&quot;interface_type&quot;: &quot;SOAP&quot;,&quot;requester_ip&quot;:ip,&quot;status&quot;: [&quot;code&quot;: &quot;0&quot; , &quot;id&quot;: &quot;&quot;, &quot;message&quot;: &quot;COMPLETE&quot;], &quot;data&quot;: &quot;\&quot;&quot; + dataDetails + &quot;\&quot;&quot;]]"
				doc:name="Map Data" />
			<vm:outbound-endpoint exchange-pattern="one-way"
				path="atc.mule.audit" doc:name="Call Core Audit Service" />
		</foreach>
		<logger
			message="[#[message.inboundProperties['X-Forwarded-For']]][SetOrders][PayloadCount : #[size]][Data successfully sent to EBS R12]"
			level="INFO" doc:name="Log Data Inserted" />
		<expression-component doc:name="Set SOAP Response "><![CDATA[import com.atc.model.tarantula.InboundServiceResponse;
			import com.atc.model.tarantula.Status;
			InboundServiceResponse inboundResponse = new InboundServiceResponse();
			Status status = new Status();
			inboundResponse.setDescription("an audit log record");
			inboundResponse.setService("atc-esb-tarantula-inbound");
			inboundResponse.setTimestamp(new java.util.Date().toString());
			status.setCode("0");
			status.setMessage("SUCCESS");
			inboundResponse.setStatus(status);
			payload = inboundResponse;
			]]>
		</expression-component>
		<set-variable variableName="responseTime" value="#[server.dateTime]"
			doc:name="Set Response Time" />
		<expression-component doc:name="Total Response Time Calculation"><![CDATA[flowVars.totalTime = (flowVars.responseTime.dayOfYear-flowVars.requestTime.dayOfYear)*(24*60*60*1000)
+(flowVars.responseTime.hours-flowVars.requestTime.hours)*(60*60*1000)
+(flowVars.responseTime.minutes-flowVars.requestTime.minutes)*(60*1000)
+(flowVars.responseTime.seconds-flowVars.requestTime.seconds)*(1000)
+(flowVars.responseTime.milliSeconds-flowVars.requestTime.milliSeconds);]]></expression-component>
		<logger
			message="[#[message.inboundProperties['X-Forwarded-For']]][SetOrders][TotalTime : #[flowVars.totalTime]]"
			level="DEBUG" doc:name="Log Total Time" category="com.atc.esb.tarantula" />
		<exception-strategy ref="inboundChoiceExceptionStrategy"
			doc:name="catch Exception" />
	</flow>


	<!-- <flow name="tarantula-auditService" doc:name="tarantula-auditService"> 
		<expression-transformer doc:name="Build Audit Map" expression='#[groovy:[ 
		"service": "tarantula-auditService", "timestamp": new java.util.Date().toString(), 
		"status": ["code": "0"], "data": payload.toString() ]]'/> <json:object-to-json-transformer 
		doc:name="Object to JSON"/> <https:outbound-endpoint host="${atc.core.host}" 
		port="${atc.core.port}" path="api/rest/audit" method="POST" contentType="application/json" 
		doc:name="Call Audit Service" user="${atc.core.user}" password="${atc.core.password}"/> 
		</flow> -->
</mule>