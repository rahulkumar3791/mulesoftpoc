<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:mule-ss="http://www.mulesoft.org/schema/mule/spring-security"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata"
	xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:quartz="http://www.mulesoft.org/schema/mule/quartz"
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/spring-security http://www.mulesoft.org/schema/mule/spring-security/current/mule-spring-security.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/quartz http://www.mulesoft.org/schema/mule/quartz/current/mule-quartz.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-current.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<flow name="project-Site-Creation-TT-to-Oracle-MainFlow">
		<quartz:inbound-endpoint jobName="Projectcreation"
			cronExpression="${projectcreation.cron.expr}" repeatInterval="0"
			responseTimeout="10000" doc:name="Quartz">
			<quartz:event-generator-job />
		</quartz:inbound-endpoint>
		<set-variable variableName="flowName" value="#['TT_PROJ_SITE']"
			doc:name="flowName" />
		<set-variable variableName="ip"
			value="#[message.inboundProperties['X-Forwarded-For']]" doc:name="Set ip" />

		<logger
			message="------------------------------Satrting Project Site Quartz Flow,Cron Scheduler is ${cron.schedule}------------------------------------"
			level="INFO" doc:name="Log Starting Flow" />
		<set-variable variableName="cron" value="${cron.schedule}"
			doc:name="cronScheduler" />
		<choice doc:name="Choice">
			<when expression="flowVars.cron == 'OFF'">
				<logger
					message="#['As cron.schedule property is OFF, please Invoke service Using HTTP endpoint']"
					level="INFO" doc:name="Log scheduler is OFF" />
			</when>
			<otherwise>
				<flow-ref name="project-site-creation-main-Flow" doc:name="project-site-creation-main-Flow" />
			</otherwise>
		</choice>
		<exception-strategy ref="exceptionhandlingChoice_Exception_Strategy"
			doc:name="Reference Exception Strategy" />
	</flow>
	<flow name="project-site-creation-main-Flow">
		<ee:multi-transactional action="ALWAYS_BEGIN"
			doc:name="Transactional">
			<flow-ref name="project-Site-Creation-MainLogicFlow"
				doc:name="project-Site-Creation-MainLogicFlow" />
		</ee:multi-transactional>
		<choice doc:name="Choice">
			<when expression="flowVars.flag == 0">
				<flow-ref name="project-Site-Creation-FinalMessage-subFlow"
					doc:name="project-Site-Creation-FinalMessage-subFlow" />
			</when>
			<otherwise>
				<dw:transform-message doc:name="Transform Message">
					<dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	message 		: "Flow has been completed with errors",
	Interface		: "Project-Site Creation from  TARANTULA to Oracle"
}]]></dw:set-payload>
				</dw:transform-message>
			</otherwise>
		</choice>
	</flow>
	<flow name="project-Site-Creation-TT-to-Oracle-Http-Flow">
		<http:listener config-ref="HTTP_Listener_Configuration"
			path="/projectsite" allowedMethods="GET" doc:name="HTTP" />
		<mule-ss:http-security-filter realm="mule-realm" />
		<set-variable variableName="flowName" value="#['TT_PROJ_SITE']"
			doc:name="flowName" />
		<set-variable variableName="ip"
			value="#[message.inboundProperties['X-Forwarded-For']]" doc:name="Set ip" />

		<logger
			message="---------------------------------Starting Project-Site-Creation-TT-to-Oracle-Http-Flow ----------------------------------"
			level="INFO" doc:name="Log Flow Start" />
		<flow-ref name="project-site-creation-main-Flow" doc:name="project-site-creation-main-Flow" />
		<exception-strategy ref="exceptionhandlingChoice_Exception_Strategy"
			doc:name="Reference Exception Strategy" />
	</flow>
	<flow name="project-Site-Creation-MainLogicFlow">
		<set-variable variableName="interfaceNumber" value="${interface.id.project.site}"
			doc:name="interfaceNumber" />
		<set-variable variableName="interface_type" value="${interface.type}"
			doc:name="interfaceType" />

		<set-variable variableName="flowName" value="#['TT_PROJ_SITE']"
			doc:name="InterfaceName" />
		<flow-ref name="ControlFlow-Read-LastRunDateFlow" doc:name="ControlFlow-Read-LastRunDateFlow" />

		<dw:transform-message doc:name="Transform Message">
			<dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload]]></dw:set-payload>
			<dw:set-variable variableName="lastRunDate"><![CDATA[%dw 1.0
%output application/java
---
payload[0].LAST_RUN_DATE]]></dw:set-variable>
		</dw:transform-message>
		<enricher source="#[payload[0].batchNumber]" target="#[flowVars.batchID]"
			doc:name="Message Enricher">
			<flow-ref name="common-Generate-Batch-Number-subFlow"
				doc:name="common-Generate-Batch-Number-subFlow" />
		</enricher>

		<flow-ref name="project-Site-Creation-ReadFrom-TT-subFlow"
			doc:name="project-Site-Creation-ReadFrom-TT-subFlow" />
		<choice doc:name="Choice">
			<when expression="payload.size()==0">
				<logger message="No Updated Records available" level="INFO"
					doc:name="Log No updated records" />
			</when>
			<otherwise>
				<flow-ref name="project-Site-Creation-WriteTo-Oracle-subFlow"
					doc:name="project-Site-Creation-WriteTo-Oracle-subFlow" />
				<!-- <flow-ref name="project-Site-Creation-WriteTo-Oracle-subFlow" doc:name="project-Site-Creation-WriteTo-Oracle-subFlow"/> -->
				<flow-ref name="project-Site-Creation-Get-maxLastRunDateSub_Flow"
					doc:name="project-Site-Creation-Get-maxLastRunDateSub_Flow" />

				<flow-ref name="project-Site-Creation-ControlTable-Update-subFlow"
					doc:name="project-Site-Creation-ControlTable-Update-subFlow" />
				<flow-ref name="successMail_Sub_Flow" doc:name="successMail_Sub_Flow" />
				<flow-ref name="getAuditDataFlow" doc:name="getAuditDataFlow" />
			</otherwise>
		</choice>
		<set-variable variableName="flag" value="#[0]" doc:name="flag" />
		<exception-strategy ref="exceptionhandlingChoice_Exception_Strategy"
			doc:name="Reference Exception Strategy" />

	</flow>
	<flow name="project-Site-Creation-ReadFrom-TT-subFlow">
		<db:select config-ref="Generic_Database_Configuration"
			doc:name="SQLServer Database">
			<db:dynamic-query><![CDATA[SELECT TTID,SOType,SODate,GlobalSiteID,SAPID,ATCSiteID,SiteName,Entity,Circle,CustomerID,LeaseTenure,TowerTenure,TowerType,TowerHeight,WindSpeed,Portfolio,Region,Cluster,Address1,Address2,Address3,Address4,PinCode,City,State,Province,County,Country,CONVERT(DATETIME2(0),LastUpdatedDate) "LastUpdatedDate" FROM O_Project_Site WHERE CONVERT(DATETIME2(0),LastUpdatedDate) > '#[flowVars.lastRunDate]']]></db:dynamic-query>
		</db:select>
		<dw:transform-message doc:name="singleQuoteEscape_Transform Message">
			<dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map ((payload01 , indexOfPayload01) -> {
		
		TTID		: payload01.TTID,
		SOType 		: payload01.SOType,
		SODate		: payload01.SODate,
		GlobalSiteID: payload01.GlobalSiteID,
		SAPID		: payload01.SAPID,
		ATCSiteID	: (payload01.ATCSiteID replace "'" with "''") when (payload01.ATCSiteID != null) otherwise payload01.ATCSiteID,
		SiteName	: (payload01.SiteName replace "'" with "''") when (payload01.SiteName != null) otherwise payload01.SiteName,
		Entity		: (payload01.Entity replace "'" with "''") when (payload01.Entity != null) otherwise payload01.Entity,
		Circle		: (payload01.Circle replace "'" with "''") when (payload01.Circle != null) otherwise payload01.Circle,
		CustomerID	: (payload01.CustomerID replace "'" with "''") when (payload01.CustomerID != null) otherwise payload01.CustomerID,
		LeaseTenure	: payload01.LeaseTenure,
		TowerTenure	: payload01.TowerTenure,
		TowerType	: payload01.TowerType,
		TowerHeight	: payload01.TowerHeight,
		WindSpeed	: payload01.WindSpeed,
		Portfolio	: payload01.Portfolio,
		Region		: payload01.Region,
		Cluster		: payload01.Cluster,
		Address1	: (payload01.Address1 replace "'" with "''") when (payload01.Address1 != null) otherwise payload01.Address1,
		Address2	: (payload01.Address2 replace "'" with "''") when (payload01.Address2 != null) otherwise payload01.Address2,
		Address3	: (payload01.Address3 replace "'" with "''") when (payload01.Address3 != null) otherwise payload01.Address3,
		Address4	: (payload01.Address4 replace "'" with "''") when (payload01.Address4 != null) otherwise payload01.Address4,
		PinCode		: (payload01.PinCode replace "'" with "''") when (payload01.PinCode != null) otherwise payload01.PinCode,
		City		: payload01.City,
		State		: payload01.State,
		Province	: payload01.Province,
		County		: payload01.County,
		Country		: payload01.Country,
		LastUpdatedDate: payload01.LastUpdatedDate
		})]]></dw:set-payload>
		</dw:transform-message>
		<dw:transform-message doc:name="Transform Message">
			<dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map ((payload01 , indexOfPayload01) -> {
		BATCH_NUMBER		: "'" ++ flowVars.batchID ++ "'",
		TT_ID				: "NULL" when (payload01.TTID == null) otherwise "'" ++ payload01.TTID ++ "'",
		SO_TYPE 			: "NULL" when (payload01.SOType == null) otherwise "'" ++ payload01.SOType ++ "'",
		SO_DATE				: "NULL" when (payload01.SODate == null) otherwise "'" ++ payload01.SODate ++ "'",
		GLOBAL_SITE_ID		: "NULL" when (payload01.GlobalSiteID == null) otherwise payload01.GlobalSiteID,
		SAP_ID				: "' '" when (payload01.SAPID == null) otherwise ("''" when (payload01.SAPID == "") otherwise "'" ++ payload01.SAPID ++ "'"),
		SITE_ID				: "NULL" when (payload01.ATCSiteID == null) otherwise "'" ++ payload01.ATCSiteID ++ "'",
		SITE_NAME			: "NULL" when (payload01.SiteName == null) otherwise "'" ++ payload01.SiteName ++ "'",
		LEGAL_ENTITY		: "NULL" when (payload01.Entity == null) otherwise "'" ++ payload01.Entity ++ "'",
		CIRCLE				: "NULL" when (payload01.Circle == null) otherwise "'" ++ payload01.Circle ++ "'",
		CUSTOMER_ID			: "NULL" when (payload01.CustomerID == null) otherwise "'" ++ payload01.CustomerID ++ "'",
		LAND_TENURE			: "NULL" when (payload01.LeaseTenure == null) otherwise "'" ++ payload01.LeaseTenure ++ "'",
		LEASE_TENURE		: "NULL" when (payload01.TowerTenure == null) otherwise "'" ++ payload01.TowerTenure ++ "'",
		FEATURE_TOWER_CLASS	: "NULL" when (payload01.TowerType == null) otherwise "'" ++ payload01.TowerType ++ "'",
		TOWER_HEIGHT		: "NULL" when (payload01.TowerHeight == null) otherwise payload01.TowerHeight,
		WIND_SPEED			: "NULL" when (payload01.WindSpeed == null) otherwise payload01.WindSpeed,
		PORTFOLIO			: "NULL" when (payload01.Portfolio == null) otherwise "'" ++ payload01.Portfolio ++ "'",
		TOWER_REGION		: "NULL" when (payload01.Region == null) otherwise "'" ++ payload01.Region ++ "'",
		CLUSTER_NAME		: "NULL" when (payload01.Cluster == null) otherwise "'" ++ payload01.Cluster ++ "'",
		ADDRESS_LINE_1		: "NULL" when (payload01.Address1 == null) otherwise ("' '" when (payload01.Address1 == "") otherwise "'" ++ payload01.Address1 ++ "'"),
		ADDRESS_LINE_2		: "NULL" when (payload01.Address2 == null) otherwise ("''" when (payload01.Address2 == "") otherwise "'" ++ payload01.Address2 ++ "'"),
		ADDRESS_LINE_3		: "NULL" when (payload01.Address3 == null) otherwise ("''" when (payload01.Address3 == "") otherwise "'" ++ payload01.Address3 ++ "'"),
		ADDRESS_LINE_4		: "NULL" when (payload01.Address4 == null) otherwise "'" ++ payload01.Address4 ++ "'",
		POSTAL_CODE			: "NULL" when (payload01.PinCode == null) otherwise "'" ++ payload01.PinCode ++ "'",
		CITY				: "NULL" when (payload01.City == null) otherwise "'" ++ payload01.City ++ "'",
		STATE				: "NULL" when (payload01.State == null) otherwise "'" ++ payload01.State ++ "'",
		PROVINCE			: "NULL" when (payload01.Province == null) otherwise "'" ++ payload01.Province ++ "'",
		COUNTY				: "NULL" when (payload01.County == null) otherwise "'" ++ payload01.County ++ "'",
		COUNTRY				: "NULL" when (payload01.Country == null) otherwise "'" ++ payload01.Country ++ "'"
		})]]></dw:set-payload>
			<dw:set-variable variableName="ListOfLastUpdatedDate"><![CDATA[%dw 1.0
%output application/java
---
(payload map ((payload01 , indexOfPayload01) -> {
	date: payload01.LastUpdatedDate
}) orderBy $.date)[-1..0]]]></dw:set-variable>
		</dw:transform-message>
		<set-variable variableName="ttData" value="#[payload]"
			doc:name="TT Data" />

	</flow>
	<sub-flow name="project-Site-Creation-WriteTo-Oracle-subFlow">
		<logger
			message="-----------------------------Writing Data to Oracle-----------------------------"
			level="INFO" doc:name="Log Writing data to Oracle" />
		<expression-component doc:name="Define Success List and Failure List"><![CDATA[flowVars.successList = new ArrayList();
flowVars.failureList=new ArrayList();]]></expression-component>
		<scatter-gather doc:name="Scatter-Gather">
			<foreach doc:name="For Each">
				<flow-ref name="ForEachFlow_success_site_creation"
					doc:name="ForEachFlow_success_site_creation" />
			</foreach>
			<processor-chain>
				<db:insert config-ref="Oracle_Configuration" bulkMode="true"
					doc:name="Database">
					<db:dynamic-query><![CDATA[INSERT INTO XXATC.ATC_PA_IND_SVCS_PRS_TT_ST_ARC(BATCH_NUMBER,TT_ID,SO_TYPE,SO_DATE,GLOBAL_SITE_ID,SAP_ID,SITE_ID,SITE_NAME,LEGAL_ENTITY,CIRCLE,CUSTOMER_ID,LEASE_TENURE,TOWER_TENURE,FEATURE_TOWER_CLASS,TOWER_HEIGHT,WIND_SPEED,PORTFOLIO,TOWER_REGION,CLUSTER_NAME,ADDRESS_LINE_1,ADDRESS_LINE_2,ADDRESS_LINE_3,ADDRESS_LINE_4,POSTAL_CODE,CITY,STATE,PROVINCE,COUNTY,COUNTRY) VALUES (#[payload.BATCH_NUMBER],#[payload.TT_ID],#[payload.SO_TYPE],to_date(#[payload.SO_DATE],'yyyy-MM-dd"T"HH24:mi:ss'),#[payload.GLOBAL_SITE_ID],#[payload.SAP_ID],#[payload.SITE_ID],#[payload.SITE_NAME],#[payload.LEGAL_ENTITY],#[payload.CIRCLE],#[payload.CUSTOMER_ID],#[payload.LEASE_TENURE],#[payload.TOWER_TENURE],#[payload.FEATURE_TOWER_CLASS],#[payload.TOWER_HEIGHT],#[payload.WIND_SPEED],#[payload.PORTFOLIO],#[payload.TOWER_REGION],#[payload.CLUSTER_NAME],#[payload.ADDRESS_LINE_1],#[payload.ADDRESS_LINE_2],#[payload.ADDRESS_LINE_3],#[payload.ADDRESS_LINE_4],#[payload.POSTAL_CODE],#[payload.CITY],#[payload.STATE],#[payload.PROVINCE],#[payload.COUNTY],#[payload.COUNTRY])]]></db:dynamic-query>
				</db:insert>
				<logger
					message="------------------------Records Archived in ATC_PA_IND_SVCS_PRS_TT_ST_ARC-------------------------------------------------------------------------"
					level="INFO" doc:name="Logger" />
			</processor-chain>
		</scatter-gather>
		<!-- <choice doc:name="Choice"> <when expression="${projectsite.debug}==true"> 
			<flow-ref name="project-site-creation_BulkLoad-DEBUG-Sub_Flow" doc:name="project-site-creation_BulkLoad-DEBUG-Sub_Flow"/> 
			</when> <otherwise> <logger message="Bulk Load Debug is not enabled, please 
			enable projectsite.debug to true" level="INFO" doc:name="Log Debug disabled"/> 
			</otherwise> </choice> -->

	</sub-flow>
	<flow name="ForEachFlow_success_site_creation">
		<logger
			message="Inserting the data ::  TT_ID------------&gt;'#[payload.TT_ID]'"
			level="INFO" doc:name="Logger" />
		<set-variable variableName="TT_ID" value="#[payload.TT_ID]"
			doc:name="Set TT_ID" />
		<db:execute-ddl config-ref="Oracle_Configuration" doc:name="Database">
            <db:dynamic-query><![CDATA[BEGIN
MERGE INTO XXATC.ATC_PA_IND_SVCS_PRSITE_TT_STG t USING (select 1 from DUAL) s on (t.TT_ID = #[payload.TT_ID]) WHEN matched THEN
   UPDATE SET t.BATCH_NUMBER = #[payload.BATCH_NUMBER], t.SO_TYPE = #[payload.SO_TYPE],
   t.SO_DATE = to_date(#[payload.SO_DATE],'yyyy-MM-dd"T"HH24:mi:ss'), t.GLOBAL_SITE_ID = #[payload.GLOBAL_SITE_ID],
   t.SAP_ID = #[payload.SAP_ID],t.SITE_ID = #[payload.SITE_ID],t.SITE_NAME = #[payload.SITE_NAME],t.LEGAL_ENTITY = #[payload.LEGAL_ENTITY],
   t.CIRCLE = #[payload.CIRCLE], t.CUSTOMER_ID = #[payload.CUSTOMER_ID], t.LEASE_TENURE = #[payload.LEASE_TENURE], t.TOWER_TENURE = #[payload.TOWER_TENURE],
   t.FEATURE_TOWER_CLASS = #[payload.FEATURE_TOWER_CLASS], t.TOWER_HEIGHT = #[payload.TOWER_HEIGHT], t.WIND_SPEED = #[payload.WIND_SPEED],
   t.PORTFOLIO = #[payload.PORTFOLIO], t.TOWER_REGION = #[payload.TOWER_REGION], t.CLUSTER_NAME = #[payload.CLUSTER_NAME], 
   t.ADDRESS_LINE_1 = #[payload.ADDRESS_LINE_1], t.ADDRESS_LINE_2 = #[payload.ADDRESS_LINE_2], t.ADDRESS_LINE_3 = #[payload.ADDRESS_LINE_3],
   t.ADDRESS_LINE_4 = #[payload.ADDRESS_LINE_4], t.POSTAL_CODE = #[payload.POSTAL_CODE], t.CITY = #[payload.CITY], t.STATE = #[payload.STATE],
   t.PROVINCE = #[payload.PROVINCE], t.COUNTY = #[payload.COUNTY], t.COUNTRY = #[payload.COUNTRY]
   WHEN NOT matched THEN
   INSERT (BATCH_NUMBER,TT_ID,SO_TYPE,SO_DATE,GLOBAL_SITE_ID,SAP_ID,SITE_ID,SITE_NAME,LEGAL_ENTITY,CIRCLE,CUSTOMER_ID,LEASE_TENURE,TOWER_TENURE,
   FEATURE_TOWER_CLASS,TOWER_HEIGHT,WIND_SPEED,PORTFOLIO,TOWER_REGION,CLUSTER_NAME,ADDRESS_LINE_1,ADDRESS_LINE_2,ADDRESS_LINE_3,ADDRESS_LINE_4,
   POSTAL_CODE,CITY,STATE,PROVINCE,COUNTY,COUNTRY)
   VALUES (#[payload.BATCH_NUMBER],#[payload.TT_ID],#[payload.SO_TYPE],to_date(#[payload.SO_DATE],'yyyy-MM-dd"T"HH24:mi:ss'),
   #[payload.GLOBAL_SITE_ID],#[payload.SAP_ID],#[payload.SITE_ID],#[payload.SITE_NAME],#[payload.LEGAL_ENTITY],#[payload.CIRCLE],
   #[payload.CUSTOMER_ID],#[payload.LEASE_TENURE],#[payload.TOWER_TENURE],#[payload.FEATURE_TOWER_CLASS],#[payload.TOWER_HEIGHT],
   #[payload.WIND_SPEED],#[payload.PORTFOLIO],#[payload.TOWER_REGION],#[payload.CLUSTER_NAME],#[payload.ADDRESS_LINE_1],#[payload.ADDRESS_LINE_2],
   #[payload.ADDRESS_LINE_3],#[payload.ADDRESS_LINE_4],#[payload.POSTAL_CODE],#[payload.CITY],#[payload.STATE],#[payload.PROVINCE],#[payload.COUNTY],
   #[payload.COUNTRY]);
END;]]></db:dynamic-query>
		</db:execute-ddl>
		<expression-component doc:name="Add TT_ID in successList"><![CDATA[flowVars.successList.add(flowVars.TT_ID) ;]]></expression-component>
		<exception-strategy
			ref="exceptionhandlingChoice_Exception_Strategy_projectSiteCreation"
			doc:name="Reference Exception Strategy" />
	</flow>
	<sub-flow name="project-Site-Creation-Get-maxLastRunDateSub_Flow">
		<logger
			message="---------------------Reading max LastRunDate-------------------------"
			level="INFO" doc:name="Log reading LastRunDate" />
		<set-variable variableName="lastUpdateDate"
			value="#[flowVars.ListOfLastUpdatedDate[0].date]" doc:name="lastUpdateDate" />
		<set-variable variableName="totalRecords"
			value="#[flowVars.ListOfLastUpdatedDate.size()]" doc:name="payloadSize" />
		<logger
			message="maxLastUpdatedDate from TT==&gt; #[payload[0].maxLastUpdatedDate]"
			level="INFO" doc:name="Log maxLastUpdatedDate" />

	</sub-flow>
	<sub-flow name="project-Site-Creation-ControlTable-Update-subFlow">
		<logger message="------------------Updating Last Run Date-------------------"
			level="INFO" doc:name="Log updating control table" />
		<dw:transform-message doc:name="Transform Message">
			<dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
{
	flowName : 'TT_PROJ_SITE',
	lastRunDate : flowVars.lastUpdateDate as :localdatetime {format: "yyyy-MM-dd HH:mm:ss"}
														  as :string {format: "dd-MM-yyyy HH:mm:ss"}
}]]></dw:set-payload>
		</dw:transform-message>
		<vm:outbound-endpoint exchange-pattern="request-response"
			path="writeLastRunDate" connector-ref="VM_Control_Table" doc:name="VM" />


	</sub-flow>
	<sub-flow name="project-Site-Creation-FinalMessage-subFlow">
		<dw:transform-message doc:name="Transform Message">
			<dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	message 		: "Flow has been successfully completed",
	Interface		: "Project Site creation from  TARANTULA to Oracle",
	recordsProcessed: flowVars.totalRecords 
	when flowVars.totalRecords != null otherwise 'No records to update',
	currentLastRun 	: flowVars.lastUpdateDate
	when flowVars.lastUpdateDate != null
	otherwise flowVars.lastRunDate,
	batchNumber: flowVars.batchID
	when flowVars.totalRecords != null otherwise 'Null'
}]]></dw:set-payload>
		</dw:transform-message>
		<logger message="#[message.payloadAs(java.lang.String)]" level="INFO"
			doc:name="Log Final Message" />
		<logger
			message="================End of Tarantula to Oracle ProjectSitecreationFlow================="
			level="INFO" doc:name="Log End of Flow" />
	</sub-flow>
	<flow name="ForEachFlow_failure_projectSiteCreation">
		<db:select config-ref="Oracle_Configuration" doc:name="Oracle Database">
			<db:dynamic-query><![CDATA[SELECT BATCH_NUMBER,TT_ID,SO_TYPE,SO_DATE,GLOBAL_SITE_ID,SAP_ID,SITE_ID,SITE_NAME,LEGAL_ENTITY,CIRCLE,CUSTOMER_ID,LEASE_TENURE,TOWER_TENURE,FEATURE_TOWER_CLASS,TOWER_HEIGHT,WIND_SPEED,PORTFOLIO,TOWER_REGION,CLUSTER_NAME,ADDRESS_LINE_1,ADDRESS_LINE_2,ADDRESS_LINE_3,ADDRESS_LINE_4,POSTAL_CODE,CITY,STATE,PROVINCE,COUNTY,COUNTRY FROM XXATC.ATC_PA_IND_SVCS_PRS_TT_ST_ARC WHERE TT_ID = '#[payload.TT_ID]']]></db:dynamic-query>
		</db:select>
		<dw:transform-message doc:name="Transform Message">
			<dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map ((payload01 , indexOfPayload01) -> {
		BATCH_NUMBER		: payload01.BATCH_NUMBER,
		TT_ID				: payload01.TT_ID,
		SO_TYPE 			: payload01.SO_TYPE,
		SO_DATE				: payload01.SO_DATE as :string {format: "dd-MM-yyyy HH:mm:ss"},
		GLOBAL_SITE_ID		: payload01.GLOBAL_SITE_ID,
		SAP_ID				: payload01.SAP_ID,
		SITE_ID				: payload01.SITE_ID,
		SITE_NAME			: payload01.SITE_NAME,
		LEGAL_ENTITY		: payload01.LEGAL_ENTITY,
		CIRCLE				: payload01.CIRCLE,
		CUSTOMER_ID			: payload01.CUSTOMER_ID,
		LAND_TENURE			: payload01.LAND_TENURE,
		LEASE_TENURE		: payload01.LEASE_TENURE,
		FEATURE_TOWER_CLASS	: payload01.FEATURE_TOWER_CLASS,
		TOWER_HEIGHT		: payload01.TOWER_HEIGHT,
		WIND_SPEED			: payload01.WIND_SPEED,
		PORTFOLIO			: payload01.PORTFOLIO,
		TOWER_REGION		: payload01.TOWER_REGION,
		CLUSTER_NAME		: payload01.CLUSTER_NAME,
		ADDRESS_LINE_1		: payload01.ADDRESS_LINE_1,
		ADDRESS_LINE_2		: payload01.ADDRESS_LINE_2,
		ADDRESS_LINE_3		: payload01.ADDRESS_LINE_3,
		ADDRESS_LINE_4		: payload01.ADDRESS_LINE_4,
		POSTAL_CODE			: payload01.POSTAL_CODE,
		CITY				: payload01.CITY,
		STATE				: payload01.STATE,
		PROVINCE			: payload01.PROVINCE,
		COUNTY				: payload01.COUNTY,
		COUNTRY				: payload01.COUNTRY
		})]]></dw:set-payload>
		</dw:transform-message>
		<logger
			message="Data from Archive for failed record ----------------------------&gt;'#[payload[0].TT_ID]'        '#[payload[0].SO_DATE]'"
			level="INFO" doc:name="Logger" />
		<set-variable variableName="ttId" value="#[payload[0].TT_ID]"
			doc:name="Variable" />
		<db:insert config-ref="Oracle_Configuration" doc:name="Oracle Database">
			<db:dynamic-query><![CDATA[INSERT INTO XXATC.ATC_PA_IND_SVCS_PRSITE_TT_STG(BATCH_NUMBER,TT_ID,SO_TYPE,SO_DATE,GLOBAL_SITE_ID,SAP_ID,SITE_ID,SITE_NAME,LEGAL_ENTITY,CIRCLE,CUSTOMER_ID,LEASE_TENURE,TOWER_TENURE,FEATURE_TOWER_CLASS,TOWER_HEIGHT,WIND_SPEED,PORTFOLIO,TOWER_REGION,CLUSTER_NAME,ADDRESS_LINE_1,ADDRESS_LINE_2,ADDRESS_LINE_3,ADDRESS_LINE_4,POSTAL_CODE,CITY,STATE,PROVINCE,COUNTY,COUNTRY) VALUES ('#[payload[0].BATCH_NUMBER]','#[payload[0].TT_ID]','#[payload[0].SO_TYPE]',to_date('#[payload[0].SO_DATE]','dd-MM-yyyy HH24:MI:ss'),#[payload[0].GLOBAL_SITE_ID],'#[payload[0].SAP_ID]','#[payload[0].SITE_ID]','#[payload[0].SITE_NAME]','#[payload[0].LEGAL_ENTITY]','#[payload[0].CIRCLE]','#[payload[0].CUSTOMER_ID]','#[payload[0].LEASE_TENURE]','#[payload[0].TOWER_TENURE]','#[payload[0].FEATURE_TOWER_CLASS]',#[payload[0].TOWER_HEIGHT],#[payload[0].WIND_SPEED],'#[payload[0].PORTFOLIO]','#[payload[0].TOWER_REGION]','#[payload[0].CLUSTER_NAME]','#[payload[0].ADDRESS_LINE_1]','#[payload[0].ADDRESS_LINE_2]','#[payload[0].ADDRESS_LINE_3]','#[payload[0].ADDRESS_LINE_4]','#[payload[0].POSTAL_CODE]','#[payload[0].CITY]','#[payload[0].STATE]','#[payload[0].PROVINCE]','#[payload[0].COUNTY]','#[payload[0].COUNTRY]')]]></db:dynamic-query>


		</db:insert>
		<logger
			message="=================Failed record &quot;#[flowVars.ttId]&quot; inserted successfully in Success Table====================="
			level="INFO" doc:name="Logger" />
		<db:delete config-ref="Oracle_Configuration" doc:name="Database">
			<db:parameterized-query><![CDATA[delete from XXATC.ATC_TT_FAILEDRECORDS where tt_id = #[flowVars.ttId]]]></db:parameterized-query>
		</db:delete>
		<logger
			message="#[flowVars.ttId] has been successfully deleted from failure table after inserting in Success Table"
			level="INFO" doc:name="Logger" />
		<exception-strategy
			ref="exceptionhandlingChoice_Exception_Strategy_failureRetry"
			doc:name="Reference Exception Strategy" />
	</flow>
	<flow name="retryFailedRecord_siteCreation_httpFlow">
		<http:listener config-ref="HTTP_Listener_Configuration"
			path="/retry/projsite" doc:name="HTTP" />
		<mule-ss:http-security-filter realm="mule-realm" />
		<flow-ref name="retryFailedRecordFlow_siteCreation" doc:name="Flow Reference" />
		<set-payload value="#[&quot;Failed records reprocessed&quot;]"
			doc:name="Set Payload" />
		<exception-strategy ref="exceptionhandlingChoice_Exception_Strategy"
			doc:name="Reference Exception Strategy" />
	</flow>
	<flow name="retryFailedRecord_siteCreation_quartzFlow">
		<quartz:inbound-endpoint jobName="ProjectcreationRetry"
			cronExpression="${projectcreation_retry.cron.expr}" repeatInterval="0"
			responseTimeout="10000" doc:name="Quartz">
			<quartz:event-generator-job />
		</quartz:inbound-endpoint>
		<flow-ref name="retryFailedRecordFlow_siteCreation" doc:name="Flow Reference" />
		<exception-strategy ref="exceptionhandlingChoice_Exception_Strategy"
			doc:name="Reference Exception Strategy" />
	</flow>
	<flow name="retryFailedRecordFlow_siteCreation">
		<set-variable variableName="flowName" value="#['TT_PROJ_SITE']"
			doc:name="interfaceName" />
		<db:select config-ref="Oracle_Configuration" doc:name="Database">
			<db:dynamic-query><![CDATA[select distinct TT_ID from ATC_TT_FAILEDRECORDS where TT_ID != 'null' and FLOW_NAME = '#[flowVars.flowName]' and  retry_count < '3']]></db:dynamic-query>
		</db:select>
		<dw:transform-message doc:name="Transform Message">
			<dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map ((payload01 , indexOfPayload01) -> {
		TT_ID       			:	(payload01.TT_ID replace "'" with "''") when (payload01.TT_ID != null) otherwise payload01.TT_ID
	})]]></dw:set-payload>
		</dw:transform-message>
		<logger
			message="List of Site Creation records in failed table--------------&gt;#[payload]"
			level="INFO" doc:name="Logger" />
		<foreach doc:name="For Each">
			<flow-ref name="ForEachFlow_failure_projectSiteCreation"
				doc:name="ForEachFlow_failure_projectSiteCreation" />
		</foreach>
	</flow>
	<flow name="project-site-creation-archive-purge-HTTP">
		<http:listener config-ref="HTTP_Listener_Configuration"
			path="/purgeArchive/projsite" doc:name="HTTP" />
		<mule-ss:http-security-filter realm="mule-realm" />
		<set-variable variableName="ip"
			value="#[message.inboundProperties['X-Forwarded-For']]" doc:name="Set ip" />
		<flow-ref name="project-site-creation-archive-purge-flow"
			doc:name="Flow Reference project-site-creation-archive-purge-flow" />
		<logger
			message="=========Project Site Creation Archive Table Purged=========="
			level="INFO" doc:name="Logger" />
		<set-payload
			value="#[&quot;Archive Table for Project Site Creation Purged Successfully&quot;]"
			doc:name="Set Payload" />
		<exception-strategy ref="exceptionhandlingChoice_Exception_Strategy"
			doc:name="Reference Exception Strategy" />
	</flow>
	<flow name="project-site-creation-archive-purge-quartz">
		<quartz:inbound-endpoint jobName="ProjectSiteCreationArchivePurge"
			cronExpression="${archive_purge.cron.expr}" repeatInterval="0"
			responseTimeout="10000" doc:name="Quartz">
			<quartz:event-generator-job />
		</quartz:inbound-endpoint>
		<flow-ref name="project-site-creation-archive-purge-flow"
			doc:name="Flow Reference project-site-creation-archive-purge-flow" />
		<logger
			message="===========Project Site Creation Archive Table Purged=============="
			level="INFO" doc:name="Logger" />
		<exception-strategy ref="exceptionhandlingChoice_Exception_Strategy"
			doc:name="Reference Exception Strategy" />
	</flow>
	<sub-flow name="project-site-creation-archive-purge-flow">
		<set-variable variableName="purgeDate"
			value="#[server.dateTime.plusMonths(-6).format('dd-MM-yyyy HH:mm:ss')]"
			doc:name="purgeDate" />
		<logger message="Purging data older than  :: #[flowVars.purgeDate]"
			level="INFO" doc:name="Logger" />
		<db:delete config-ref="Oracle_Configuration" doc:name="Oracle Database">
			<db:dynamic-query><![CDATA[delete FROM XXATC.ATC_PA_IND_SVCS_PRS_TT_ST_ARC WHERE created_on < TO_DATE('#[flowVars.purgeDate]','dd-MM-yyyy HH24:MI:ss')]]></db:dynamic-query>
		</db:delete>
	</sub-flow>
</mule>
