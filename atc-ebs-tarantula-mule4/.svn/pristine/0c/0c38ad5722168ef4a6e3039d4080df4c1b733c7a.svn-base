<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:mule-ss="http://www.mulesoft.org/schema/mule/spring-security"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata"
	xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:quartz="http://www.mulesoft.org/schema/mule/quartz"
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/spring-security http://www.mulesoft.org/schema/mule/spring-security/current/mule-spring-security.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/quartz http://www.mulesoft.org/schema/mule/quartz/current/mule-quartz.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-current.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<flow name="Purchase-Requistion-ttId-http-flow">
		<http:listener config-ref="HTTP_Listener_Configuration"
			path="/purchaserequisition/siteId" allowedMethods="GET" doc:name="HTTP" />
		<mule-ss:http-security-filter realm="mule-realm">
		</mule-ss:http-security-filter>
		<set-variable variableName="flowName" value="#['Purchase Requisition']"
			doc:name="flowName" />
		<set-variable variableName="ip"
			value="#[message.inboundProperties['X-Forwarded-For']]" doc:name="ip" />
		<logger
			message="#['---------------------------Starting '+flowVars.flowName +' flow--------------------------']"
			level="INFO" doc:name="Log Flow Start" />
		<flow-ref name="purchase-requistion-ttId-main-Flow" doc:name="purchase-requistion-ttId-main-Flow" />
		<exception-strategy ref="exceptionhandlingChoice_Exception_Strategy"
			doc:name="Reference Exception Strategy" />
	</flow>
	<flow name="purchase-requistion-ttId-main-Flow">
		<set-variable variableName="interface_type" value="${interface.type}"
			doc:name="interface_type" />
		<set-variable variableName="interfaceNumber"
			value="${interface.id.purchase.requisition.ttid}" doc:name="interfaceNumber" />
		<set-variable variableName="prLineId"
			value="#[message.inboundProperties.'http.query.params'.LineId]"
			doc:name="prLineId" />
		<set-payload value="#[flowVars.prLineId]" doc:name="Set Payload" />
		<choice doc:name="Choice">
			<when expression="#[payload == null || payload == &quot;&quot;]">
				<logger message="Provide a Site Id to process data" level="INFO"
					doc:name="Log Response" />
				<set-payload value="Please provide Line Id to process data"
					doc:name="Set Payload" />
			</when>
			<otherwise>

				<ee:multi-transactional action="ALWAYS_BEGIN"
					doc:name="Transactional">
					<flow-ref name="Purchase-Requistion-ttId-MainLogicFlow"
						doc:name="Purchase-Requistion-ttId-MainLogicFlow" />
				</ee:multi-transactional>
				<choice doc:name="Choice">
					<when expression="flowVars.flag == 0">
						<flow-ref name="Purachase-Requisition-FinalMessage-subFlow"
							doc:name="Purachase-Requisition-FinalMessage-subFlow" />
					</when>
					<otherwise>
						<dw:transform-message doc:name="Transform Message">
							<dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	message 		: "Flow has been completed with errors",
	InterfaceName	: "Purchase Requisition : Oracle to Tarantula"
}]]></dw:set-payload>
						</dw:transform-message>
					</otherwise>
				</choice>
			</otherwise>
		</choice>
	</flow>

	<flow name="Purchase-Requistion-ttId-MainLogicFlow">
		<set-variable variableName="flowName" value="#['TT_PR_DETAILS']"
			doc:name="InterfaceName" />

		<flow-ref name="Purachese-Requisition-ttId-ReadFromOracle-subFlow"
			doc:name="Purachese-Requisition-ttId-ReadFromOracle-subFlow" />
		<logger
			message="Date from Oracle Inbound PR Table :#[message.payloadAs(java.lang.String)]"
			level="DEBUG" doc:name="Debug-Log Data from Oracle Table" />
		<choice doc:name="Check Payload Size">
			<when expression="payload.size()==0">
				<logger message="No Records to Update" level="INFO" doc:name="Logger" />
			</when>
			<otherwise>
				<flow-ref name="Purachese-Requisition-ttId-write-to-TT-subFlow"
					doc:name="Purachese-Requisition-ttId-write-to-TT-subFlow" />
				<flow-ref name="Purchase-Requisition-GetTotalRecordsSub_Flow"
					doc:name="Purchase-Requisition-GetTotalRecordsSub_Flow" />
				<flow-ref name="successMail_SiteIdSub_Flow" doc:name="successMail_SiteIdSub_Flow" />
				<flow-ref name="auditDataFlow" doc:name="auditDataFlow" />

			</otherwise>
		</choice>
		<set-variable variableName="flag" value="#[0]" doc:name="flag" />

		<exception-strategy ref="exceptionhandlingChoice_Exception_Strategy"
			doc:name="Reference Exception Strategy" />

	</flow>
	<sub-flow name="Purachese-Requisition-ttId-ReadFromOracle-subFlow">
		<logger
			message="Inside the ==&gt; Purachese-Requisition-ReadFromOracle-subFlow"
			level="INFO" doc:name="Log ReadFromOracle " />
		<db:select config-ref="Oracle_Configuration" doc:name="Oracle Database">
			<db:dynamic-query><![CDATA[SELECT PR.PR_HEADER_ID,PR.PR_NUMBER,PR.PR_STATUS,PR.PR_DESCRIPTION,TTID, PR.PR_LINE_ID,PR.PR_LINE_NUMBER,PR.PR_LINE_STATUS,
PR.ITEM_CODE,PR.ITEM_DESCRIPTION,
DECODE(PR.ITEM_CATEGORY, 
'Airconditioner' , DECODE(LK.ITEM_CODE, null,PR.ITEM_CATEGORY||'-Others',PR.ITEM_CATEGORY),
'Battery Bank' , DECODE(LK.ITEM_CODE, null,PR.ITEM_CATEGORY||'-Others',PR.ITEM_CATEGORY),
'DG' , DECODE(LK.ITEM_CODE, null,PR.ITEM_CATEGORY||'-Others',PR.ITEM_CATEGORY),
'Shelter' , DECODE(LK.ITEM_CODE, null,PR.ITEM_CATEGORY||'-Others',PR.ITEM_CATEGORY),
'SMPS' , DECODE(LK.ITEM_CODE, null,PR.ITEM_CATEGORY||'-Others',PR.ITEM_CATEGORY),
'TOWER' , DECODE(LK.ITEM_CODE, null,PR.ITEM_CATEGORY||'-Others',PR.ITEM_CATEGORY),
PR.ITEM_CATEGORY
) "ITEM_CATEGORY",
PR.UOM_CODE, to_char(PR.NEED_BY_DATE,'yyyy-mm-dd HH24:MI:SS') "NEED_BY_DATE",
PR.QUANTITY,PRICE, PR.LINE_VALUE ,PR.PROJECT_NAME,PR.SUPPLIER_NAME,
to_char(PR.CREATION_DATE,'yyyy-mm-dd HH24:MI:SS') "CREATION_DATE",
to_char(PR.LAST_UPDATE_DATE,'yyyy-mm-dd HH24:MI:SS') "LAST_UPDATE_DATE",
PR.PO_NUMBER,PR.PO_STATUS,PR.MO_NUMBER, PR.MO_STATUS
FROM XXATC.ATC_PO_IND_SVCS_PR_TT_V PR LEFT JOIN XXATC.ATC_IND_ITEM_CODE_LOOKUP LK
ON PR.ITEM_CODE = LK.ITEM_CODE
WHERE PR.PR_LINE_ID = '#[flowVars.prLineId]']]></db:dynamic-query>
		</db:select>
		<dw:transform-message doc:name="singleQuoteEscape-Transform Message">
			<dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map ((payload01 , indexOfPayload01) -> {
		PR_HEADER_ID		:	(payload01.PR_HEADER_ID replace "'" with "''") when (payload01.PR_HEADER_ID != null) otherwise payload01.PR_HEADER_ID,
		PR_NUMBER			: 	(payload01.PR_NUMBER replace "'" with "''") when (payload01.PR_NUMBER != null) otherwise payload01.PR_NUMBER,
		PR_STATUS  			:	(payload01.PR_STATUS replace "'" with "''") when (payload01.PR_STATUS != null) otherwise payload01.PR_STATUS,
		PR_DESCRIPTION  	:	(payload01.PR_DESCRIPTION replace "'" with "''") when (payload01.PR_DESCRIPTION != null) otherwise payload01.PR_DESCRIPTION,
		TTID       			:	(payload01.TTID replace "'" with "''") when (payload01.TTID != null) otherwise payload01.TTID,
		PR_LINE_ID 			:	(payload01.PR_LINE_ID replace "'" with "''") when (payload01.PR_LINE_ID != null) otherwise payload01.PR_LINE_ID,
		PR_LINE_NUMBER   	:	(payload01.PR_LINE_NUMBER replace "'" with "''") when (payload01.PR_LINE_NUMBER != null) otherwise payload01.PR_LINE_NUMBER,
		PR_LINE_STATUS   	:	(payload01.PR_LINE_STATUS replace "'" with "''") when (payload01.PR_LINE_STATUS != null) otherwise payload01.PR_LINE_STATUS,
		ITEM_CODE  			:	(payload01.ITEM_CODE replace "'" with "''") when (payload01.ITEM_CODE != null) otherwise payload01.ITEM_CODE,
		ITEM_DESCRIPTION 	:	(payload01.ITEM_DESCRIPTION replace "'" with "''") when (payload01.ITEM_DESCRIPTION != null) otherwise payload01.ITEM_DESCRIPTION,
		ITEM_CATEGORY    	:	(payload01.ITEM_CATEGORY replace "'" with "''") when (payload01.ITEM_CATEGORY != null) otherwise payload01.ITEM_CATEGORY,
		UOM_CODE   			:	(payload01.UOM_CODE replace "'" with "''") when (payload01.UOM_CODE != null) otherwise payload01.UOM_CODE,
		NEED_BY_DATE     	:	(payload01.NEED_BY_DATE replace "'" with "''") when (payload01.NEED_BY_DATE != null) otherwise payload01.NEED_BY_DATE,
		QUANTITY   			:	(payload01.QUANTITY replace "'" with "''") when (payload01.QUANTITY != null) otherwise payload01.QUANTITY,
		PRICE      			:	(payload01.PRICE replace "'" with "''") when (payload01.PRICE != null) otherwise payload01.PRICE,
		LINE_VALUE 			:	(payload01.LINE_VALUE replace "'" with "''") when (payload01.LINE_VALUE != null) otherwise payload01.LINE_VALUE,
		PROJECT_NAME		: 	(payload01.PROJECT_NAME replace "'" with "''") when (payload01.PROJECT_NAME != null) otherwise payload01.PROJECT_NAME,
		SUPPLIER_NAME    	:	(payload01.SUPPLIER_NAME replace "'" with "''") when (payload01.SUPPLIER_NAME != null) otherwise payload01.SUPPLIER_NAME,
		CREATION_DATE    	:	(payload01.CREATION_DATE replace "'" with "''") when (payload01.CREATION_DATE != null) otherwise payload01.CREATION_DATE,
		LAST_UPDATE_DATE 	:	(payload01.LAST_UPDATE_DATE replace "'" with "''") when (payload01.LAST_UPDATE_DATE != null) otherwise payload01.LAST_UPDATE_DATE,
		PO_NUMBER  			:	(payload01.PO_NUMBER replace "'" with "''") when (payload01.PO_NUMBER != null) otherwise payload01.PO_NUMBER,
		PO_STATUS  			:	(payload01.PO_STATUS replace "'" with "''") when (payload01.PO_STATUS != null) otherwise payload01.PO_STATUS,
		MO_NUMBER  			:	(payload01.MO_NUMBER replace "'" with "''") when (payload01.MO_NUMBER != null) otherwise payload01.MO_NUMBER,
		MO_STATUS  			:	(payload01.MO_STATUS replace "'" with "''") when (payload01.MO_STATUS != null) otherwise payload01.MO_STATUS
		
		})]]></dw:set-payload>
		</dw:transform-message>


		<dw:transform-message doc:name="Transform Message"
			metadata:id="71eb479c-c547-403f-b294-0f25148eb2e0">
			<dw:input-payload />
			<dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map ((payload01 , indexOfPayload01) -> {
		PR_HEADER_ID		:	payload01.PR_HEADER_ID,
		PR_NUMBER			: 	payload01.PR_NUMBER,
		PR_STATUS  			:	payload01.PR_STATUS,
		PR_DESCRIPTION  	:	"''" when (payload01.PR_DESCRIPTION == null) otherwise "'" ++ payload01.PR_DESCRIPTION ++ "'",
		TTID       			:	"''" when (payload01.TTID == null) otherwise "'" ++ payload01.TTID ++ "'",
		PR_LINE_ID 			:	payload01.PR_LINE_ID,
		PR_LINE_NUMBER   	:	payload01.PR_LINE_NUMBER,
		PR_LINE_STATUS   	:	payload01.PR_LINE_STATUS,
		ITEM_CODE  			:	payload01.ITEM_CODE,
		ITEM_DESCRIPTION 	:	payload01.ITEM_DESCRIPTION,
		ITEM_CATEGORY    	:	payload01.ITEM_CATEGORY,
		UOM_CODE   			:	payload01.UOM_CODE,
		NEED_BY_DATE     	:	"''" when (payload01.NEED_BY_DATE == null) otherwise "'" ++ payload01.NEED_BY_DATE ++ "'",
		QUANTITY   			:	payload01.QUANTITY,
		PRICE      			:	payload01.PRICE,
		LINE_VALUE 			:	payload01.LINE_VALUE,
		PROJECT_NAME		: 	"NULL" when (payload01.PROJECT_NAME == null) otherwise "'" ++ payload01.PROJECT_NAME ++ "'",
		SUPPLIER_NAME    	:	"NULL" when (payload01.SUPPLIER_NAME == null) otherwise "'" ++ payload01.SUPPLIER_NAME ++ "'",
		CREATION_DATE    	:	payload01.CREATION_DATE ,
		LAST_UPDATE_DATE 	:	payload01.LAST_UPDATE_DATE,
		PO_NUMBER  			:	"NULL" when (payload01.PO_NUMBER == null) otherwise "'" ++ payload01.PO_NUMBER ++ "'",
		PO_STATUS  			:	"NULL" when (payload01.PO_STATUS == null) otherwise "'" ++ payload01.PO_STATUS ++ "'",
		MO_NUMBER  			:	"NULL" when (payload01.MO_NUMBER == null) otherwise "'" ++ payload01.MO_NUMBER ++ "'",
		MO_STATUS  			:	"NULL" when (payload01.MO_STATUS == null) otherwise "'" ++ payload01.MO_STATUS ++ "'"
		
		})]]></dw:set-payload>
			<dw:set-variable variableName="ListOfLastUpdatedDate"><![CDATA[%dw 1.0
%output application/java
---
(payload map ((payload01 , indexOfPayload01) -> {
	date: payload01.LAST_UPDATE_DATE
}) orderBy $.date)[-1..0]]]></dw:set-variable>
		</dw:transform-message>
		<logger message="Date from Oracle ==&gt; #[payload]" level="DEBUG"
			doc:name="Debug-Data from Oracle" />

	</sub-flow>
	<sub-flow name="Purachese-Requisition-ttId-write-to-TT-subFlow">
		<logger message="Inside the ==&gt; Purachese-Requisition-write-to-TT-subFlow"
			level="INFO" doc:name="Logger write-to-TT" />
		<choice doc:name="Choice">
			<when expression="${purchaserequisition.debug}==true">
				<flow-ref name="purchase-requistion-ttId_BulkLoad-DEBUG-Sub_Flow"
					doc:name="purchase-requistion-ttId_BulkLoad-DEBUG-Sub_Flow" />
			</when>
			<otherwise>
				<logger
					message="Bulk Load Debug is not enabled, please enable purchaserequisition.debug to true"
					level="INFO" doc:name="Log Debug disabled" />
			</otherwise>
		</choice>
		<ee:xa-transactional action="ALWAYS_BEGIN"
			doc:name="Transactional">
			<db:insert config-ref="Generic_Database_Configuration"
				bulkMode="true" doc:name="Database">
				<db:dynamic-query><![CDATA[INSERT INTO 
I_PR_PO(BOQId, PRLineId, PRNumber, PRStatus, PRDescription, TTID, PRLineNumber, PRLineStatus, ItemCode, ItemDescription, ItemName, UOMCode, NeedByDate, Quantity, Price, LineValue, ProjectName, Vendor, PONumber, POStatus, MONumber, MOStatus, CreationDate, LastUpdateDate)
VALUES ('#[payload.PR_HEADER_ID]',#[payload.PR_LINE_ID],'#[payload.PR_NUMBER]','#[payload.PR_STATUS]',#[payload.PR_DESCRIPTION],
#[payload.TTID],'#[payload.PR_LINE_NUMBER]','#[payload.PR_LINE_STATUS]','#[payload.ITEM_CODE]','#[payload.ITEM_DESCRIPTION]',
'#[payload.ITEM_CATEGORY]','#[payload.UOM_CODE]',#[payload.NEED_BY_DATE],#[payload.QUANTITY],#[payload.PRICE],#[payload.LINE_VALUE],
#[payload.PROJECT_NAME],#[payload.SUPPLIER_NAME],#[payload.PO_NUMBER],#[payload.PO_STATUS], #[payload.MO_NUMBER],
#[payload.MO_STATUS],'#[payload.CREATION_DATE]','#[payload.LAST_UPDATE_DATE]')]]></db:dynamic-query>

			</db:insert>
		</ee:xa-transactional>

		<logger message="Inserted Rows in to table: #[payload.toString()]"
			level="INFO" doc:name="Log Rows Inserted" />

	</sub-flow>
	<sub-flow name="Purchase-Requisition-GetTotalRecordsSub_Flow">
		<set-variable variableName="lastUpdateDate"
			value="#[flowVars.ListOfLastUpdatedDate[0].date]" doc:name="lastUpdateDate" />
		<set-variable variableName="payloadSize"
			value="#[flowVars.ListOfLastUpdatedDate.size()]" doc:name="payloadSize" />

		<set-variable variableName="totalRecords" value="#[flowVars.payloadSize]"
			doc:name="totalRecords" />

	</sub-flow>
	<sub-flow name="purchase-requistion-ttId_BulkLoad-DEBUG-Sub_Flow">
		<logger
			message="Inside the ==&gt; purchase-requistion_BulkLoad-DEBUG-Sub_Flow"
			level="INFO" doc:name="Log BulkLoad-DEBUG" />
		<logger
			message="If there is any issue in Inserting in BULK mode, please try inserting below Insert script as it is in the Tarantula"
			level="INFO" doc:name="Log Use Insert Script" />
		<foreach collection="#[payload]" doc:name="For Each">
			<logger
				message="INSERT INTO I_PR_PO(BOQId, PRLineId, PRNumber, PRStatus, PRDescription, TTID, PRLineNumber, PRLineStatus, ItemCode, ItemDescription, ItemName, UOMCode, NeedByDate, Quantity, Price, LineValue, ProjectName, Vendor, PONumber, POStatus, MONumber, MOStatus, CreationDate, LastUpdateDate) VALUES ('#[payload.PR_HEADER_ID]',#[payload.PR_LINE_ID],'#[payload.PR_NUMBER]','#[payload.PR_STATUS]',#[payload.PR_DESCRIPTION],#[payload.TTID],'#[payload.PR_LINE_NUMBER]','#[payload.PR_LINE_STATUS]','#[payload.ITEM_CODE]','#[payload.ITEM_DESCRIPTION]','#[payload.ITEM_CATEGORY]','#[payload.UOM_CODE]',#[payload.NEED_BY_DATE],#[payload.QUANTITY],#[payload.PRICE],#[payload.LINE_VALUE],#[payload.PROJECT_NAME],#[payload.SUPPLIER_NAME],#[payload.PO_NUMBER],#[payload.PO_STATUS], #[payload.MO_NUMBER],#[payload.MO_STATUS],'#[payload.CREATION_DATE]','#[payload.LAST_UPDATE_DATE]')"
				level="DEBUG" doc:name="Query Logger-DEBUG" />
		</foreach>
	</sub-flow>
</mule>
