<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:mule-ss="http://www.mulesoft.org/schema/mule/spring-security"
	xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns:metadata="http://www.mulesoft.org/schema/mule/metadata"
	xmlns:batch="http://www.mulesoft.org/schema/mule/batch" xmlns:dw="http://www.mulesoft.org/schema/mule/ee/dw"
	xmlns:db="http://www.mulesoft.org/schema/mule/db" xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
	xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:quartz="http://www.mulesoft.org/schema/mule/quartz"
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/spring-security http://www.mulesoft.org/schema/mule/spring-security/current/mule-spring-security.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd
http://www.mulesoft.org/schema/mule/quartz http://www.mulesoft.org/schema/mule/quartz/current/mule-quartz.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-current.xsd
http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/ee/dw http://www.mulesoft.org/schema/mule/ee/dw/current/dw.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<flow name="project-site-creation-siteId-main-Flow">
		<set-variable variableName="interfaceNumber"
			value="${interface.id.project.site.ttid}" doc:name="interfaceNumber" />
		<set-variable variableName="interface_type" value="${interface.type}"
			doc:name="interfaceType" />
		<set-variable variableName="ttId"
			value="#[message.inboundProperties.'http.query.params'.TTId]"
			doc:name="ttId" />
		<set-payload value="#[flowVars.ttId]" doc:name="Set Payload" />
		<choice doc:name="Choice">
			<when expression="#[payload == null || payload == &quot;&quot;]">
				<logger message="Provide a TT Id to process data" level="INFO"
					doc:name="Log Response" />
				<set-payload value="Please provide TT Id to process data"
					doc:name="Set Payload" />
			</when>
			<otherwise>
				<ee:multi-transactional action="ALWAYS_BEGIN"
					doc:name="Transactional">
					<flow-ref name="project-Site-Creation-siteId-MainLogicFlow"
						doc:name="project-Site-Creation-siteId-MainLogicFlow" />
					<choice doc:name="Choice">
						<when expression="flowVars.flag == 0">
							<flow-ref name="project-Site-Creation-siteId-FinalMessage-subFlow"
								doc:name="project-Site-Creation-siteId-FinalMessage-subFlow" />
						</when>
						<otherwise>
							<dw:transform-message doc:name="Transform Message">
								<dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
      message           : "Flow has been completed with errors",
      Interface         : "Project-Site Creation from  TARANTULA to Oracle"
}]]></dw:set-payload>
							</dw:transform-message>
						</otherwise>
					</choice>
				</ee:multi-transactional>
			</otherwise>
		</choice>
	</flow>
	<flow name="project-Site-Creation-TT-to-Oracle-SiteId-Http-Flow">
		<http:listener config-ref="HTTP_Listener_Configuration"
			path="/projectsite/siteId" allowedMethods="GET" doc:name="HTTP" />
		<!-- <mule-ss:http-security-filter realm="mule-realm"/> -->
		<set-variable variableName="flowName" value="#['TT_PROJ_SITE']"
			doc:name="flowName" />
		<set-variable variableName="ip"
			value="#[message.inboundProperties['X-Forwarded-For']]" doc:name="Set ip" />
		<logger
			message="-------------------------Starting Project Site Creation SiteId Flow ------------------------------------"
			level="INFO" doc:name="Log Starting Flow" />
		<flow-ref name="project-site-creation-siteId-main-Flow"
			doc:name="project-site-creation-siteId-main-Flow" />
		<exception-strategy ref="exceptionhandlingChoice_Exception_Strategy"
			doc:name="Reference Exception Strategy" />
	</flow>
	<flow name="project-Site-Creation-siteId-MainLogicFlow">
		<logger message="Inside Tarantula Project Site creation SiteId Flow"
			level="INFO" doc:name="Log Interface Name" />
		<set-variable variableName="flowName" value="#['TT_PROJ_SITE']"
			doc:name="InterfaceName" />
		<enricher source="#[payload[0].batchNumber]" target="#[flowVars.batchID]"
			doc:name="Message Enricher">
			<flow-ref name="common-Generate-Batch-Number-subFlow"
				doc:name="common-Generate-Batch-Number-subFlow" />
		</enricher>
		<flow-ref name="project-Site-Creation-ReadFrom-TT-siteId-subFlow"
			doc:name="project-Site-Creation-ReadFrom-TT-siteId-subFlow" />
		<choice doc:name="Check Payload Size">
			<when expression="payload.size()==0">
				<logger message="No Updated Records available" level="INFO"
					doc:name="Log No Records" />
			</when>
			<otherwise>
				<flow-ref name="project-Site-Creation-WriteTo-Oracle-siteId-subFlow"
					doc:name="project-Site-Creation-WriteTo-Oracle-siteId-subFlow" />
				<flow-ref name="project-Site-Creation-GetTotalRecords_Flow"
					doc:name="project-Site-Creation-GetTotalRecords_Flow" />
				<flow-ref name="successMail_SiteIdSub_Flow" doc:name="successMail_SiteIdSub_Flow" />
				<flow-ref name="auditDataFlow" doc:name="auditDataFlow" />
			</otherwise>
		</choice>
		<set-variable variableName="flag" value="#[0]" doc:name="flag" />
		<exception-strategy ref="exceptionhandlingChoice_Exception_Strategy"
			doc:name="Reference Exception Strategy" />

	</flow>
	<flow name="project-Site-Creation-ReadFrom-TT-siteId-subFlow">
		<db:select config-ref="Generic_Database_Configuration"
			doc:name="SQLServer Database">
			<db:dynamic-query><![CDATA[SELECT TTID,SOType,convert(varchar, SODate, 120) as SODate,GlobalSiteID,SAPID,ATCSiteID,SiteName,Entity,Circle,CustomerID,LeaseTenure,TowerTenure,TowerType,TowerHeight,WindSpeed,Portfolio,Region,Cluster,Address1,Address2,Address3,Address4,PinCode,City,State,Province,County,Country,CONVERT(DATETIME2(0),LastUpdatedDate) "LastUpdatedDate" FROM O_Project_Site WHERE LastUpdatedDate is not null and TTID = '#[flowVars.ttId]']]></db:dynamic-query>
		</db:select>
		<dw:transform-message doc:name="singleQuoteEscape_Transform Message">
			<dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map ((payload01 , indexOfPayload01) -> {
		
		TTID		: payload01.TTID,
		SOType 		: payload01.SOType,
		SODate		: payload01.SODate,
		GlobalSiteID: payload01.GlobalSiteID,
		SAPID		: payload01.SAPID,
		ATCSiteID	: (payload01.ATCSiteID replace "'" with "''") when (payload01.ATCSiteID != null) otherwise payload01.ATCSiteID,
		SiteName	: (payload01.SiteName replace "'" with "''") when (payload01.SiteName != null) otherwise payload01.SiteName,
		Entity		: (payload01.Entity replace "'" with "''") when (payload01.Entity != null) otherwise payload01.Entity,
		Circle		: (payload01.Circle replace "'" with "''") when (payload01.Circle != null) otherwise payload01.Circle,
		CustomerID	: (payload01.CustomerID replace "'" with "''") when (payload01.CustomerID != null) otherwise payload01.CustomerID,
		LeaseTenure	: payload01.LeaseTenure,
		TowerTenure	: payload01.TowerTenure,
		TowerType	: payload01.TowerType,
		TowerHeight	: payload01.TowerHeight,
		WindSpeed	: payload01.WindSpeed,
		Portfolio	: payload01.Portfolio,
		Region		: payload01.Region,
		Cluster		: payload01.Cluster,
		Address1	: (payload01.Address1 replace "'" with "''") when (payload01.Address1 != null) otherwise payload01.Address1,
		Address2	: (payload01.Address2 replace "'" with "''") when (payload01.Address2 != null) otherwise payload01.Address2,
		Address3	: (payload01.Address3 replace "'" with "''") when (payload01.Address3 != null) otherwise payload01.Address3,
		Address4	: (payload01.Address4 replace "'" with "''") when (payload01.Address4 != null) otherwise payload01.Address4,
		PinCode		: (payload01.PinCode replace "'" with "''") when (payload01.PinCode != null) otherwise payload01.PinCode,
		City		: payload01.City,
		State		: payload01.State,
		Province	: payload01.Province,
		County		: payload01.County,
		Country		: payload01.Country,
		LastUpdatedDate: payload01.LastUpdatedDate
		})]]></dw:set-payload>
		</dw:transform-message>
		<dw:transform-message doc:name="Transform Message">
			<dw:set-payload><![CDATA[%dw 1.0
%output application/java
---
payload map ((payload01 , indexOfPayload01) -> {
		BATCH_NUMBER		: "'" ++ flowVars.batchID ++ "'",
		TT_ID				: "NULL" when (payload01.TTID == null) otherwise "'" ++ payload01.TTID ++ "'",
		SO_TYPE 			: "NULL" when (payload01.SOType == null) otherwise "'" ++ payload01.SOType ++ "'",
		SO_DATE				: "NULL" when (payload01.SODate == null) otherwise "'" ++ payload01.SODate ++ "'",
		GLOBAL_SITE_ID		: "NULL" when (payload01.GlobalSiteID == null) otherwise payload01.GlobalSiteID,
		SAP_ID				: "' '" when (payload01.SAPID == null) otherwise ("''" when (payload01.SAPID == "") otherwise "'" ++ payload01.SAPID ++ "'"),
		SITE_ID				: "NULL" when (payload01.ATCSiteID == null) otherwise "'" ++ payload01.ATCSiteID ++ "'",
		SITE_NAME			: "NULL" when (payload01.SiteName == null) otherwise "'" ++ payload01.SiteName ++ "'",
		LEGAL_ENTITY		: "NULL" when (payload01.Entity == null) otherwise "'" ++ payload01.Entity ++ "'",
		CIRCLE				: "NULL" when (payload01.Circle == null) otherwise "'" ++ payload01.Circle ++ "'",
		CUSTOMER_ID			: "NULL" when (payload01.CustomerID == null) otherwise "'" ++ payload01.CustomerID ++ "'",
		LAND_TENURE			: "NULL" when (payload01.LeaseTenure == null) otherwise "'" ++ payload01.LeaseTenure ++ "'",
		LEASE_TENURE		: "NULL" when (payload01.TowerTenure == null) otherwise "'" ++ payload01.TowerTenure ++ "'",
		FEATURE_TOWER_CLASS	: "NULL" when (payload01.TowerType == null) otherwise "'" ++ payload01.TowerType ++ "'",
		TOWER_HEIGHT		: "NULL" when (payload01.TowerHeight == null) otherwise payload01.TowerHeight,
		WIND_SPEED			: "NULL" when (payload01.WindSpeed == null) otherwise payload01.WindSpeed,
		PORTFOLIO			: "NULL" when (payload01.Portfolio == null) otherwise "'" ++ payload01.Portfolio ++ "'",
		TOWER_REGION		: "NULL" when (payload01.Region == null) otherwise "'" ++ payload01.Region ++ "'",
		CLUSTER_NAME		: "NULL" when (payload01.Cluster == null) otherwise "'" ++ payload01.Cluster ++ "'",
		ADDRESS_LINE_1		: "NULL" when (payload01.Address1 == null) otherwise ("' '" when (payload01.Address1 == "") otherwise "'" ++ payload01.Address1 ++ "'"),
		ADDRESS_LINE_2		: "NULL" when (payload01.Address2 == null) otherwise ("''" when (payload01.Address2 == "") otherwise "'" ++ payload01.Address2 ++ "'"),
		ADDRESS_LINE_3		: "NULL" when (payload01.Address3 == null) otherwise ("''" when (payload01.Address3 == "") otherwise "'" ++ payload01.Address3 ++ "'"),
		ADDRESS_LINE_4		: "NULL" when (payload01.Address4 == null) otherwise "'" ++ payload01.Address4 ++ "'",
		POSTAL_CODE			: "NULL" when (payload01.PinCode == null) otherwise "'" ++ payload01.PinCode ++ "'",
		CITY				: "NULL" when (payload01.City == null) otherwise "'" ++ payload01.City ++ "'",
		STATE				: "NULL" when (payload01.State == null) otherwise "'" ++ payload01.State ++ "'",
		PROVINCE			: "NULL" when (payload01.Province == null) otherwise "'" ++ payload01.Province ++ "'",
		COUNTY				: "NULL" when (payload01.County == null) otherwise "'" ++ payload01.County ++ "'",
		COUNTRY				: "NULL" when (payload01.Country == null) otherwise "'" ++ payload01.Country ++ "'"
		})]]></dw:set-payload>
			<dw:set-variable variableName="ListOfLastUpdatedDate"><![CDATA[%dw 1.0
%output application/java
---
(payload map ((payload01 , indexOfPayload01) -> {
      date: payload01.LastUpdatedDate
}) orderBy $.date)[-1..0]]]></dw:set-variable>
		</dw:transform-message>
		<logger message="Data from Tarantula ==&gt; #[payload]" level="DEBUG"
			doc:name="Log Data from Tarantula" />

	</flow>
	<sub-flow name="project-Site-Creation-WriteTo-Oracle-siteId-subFlow">
		<logger message="Writing Data to Oracle" level="INFO"
			doc:name="Log Write To Oracle" />
		<choice doc:name="Choice">
			<when expression="${projectsite.debug}==true">
				<flow-ref name="project-site-creation-siteId_BulkLoad-DEBUG-Sub_Flow"
					doc:name="project-site-creation-siteId_BulkLoad-DEBUG-Sub_Flow" />
			</when>
			<otherwise>
				<logger
					message="Bulk Load Debug is not enabled, please enable projectsite.debug to true"
					level="INFO" doc:name="Log Debug is disabled" />
			</otherwise>
		</choice>
		<db:insert config-ref="Oracle_Configuration" doc:name="Oracle Database">
			<db:dynamic-query><![CDATA[#[sql]]]></db:dynamic-query>
		</db:insert>

		<logger message="Inserted Rows in to table: #[payload.toString()]"
			level="INFO" doc:name="Log Rows Inserted in Table" />

	</sub-flow>
	<sub-flow name="project-site-creation-siteId_BulkLoad-DEBUG-Sub_Flow">
		<logger
			message="If there is any issue in Inserting in BULK mode, please try inserting below Insert script as it is in the Oracle:"
			level="INFO" doc:name="Log please try inserting Insert script" />
		<foreach doc:name="For Each">
			<expression-component doc:name="Expression"><![CDATA[flowVars.sql="INSERT INTO XXATC.ATC_PA_IND_SVCS_PRSITE_TT_STG(BATCH_NUMBER,TT_ID,SO_TYPE,SO_DATE,GLOBAL_SITE_ID,SAP_ID,SITE_ID,SITE_NAME,LEGAL_ENTITY,CIRCLE,CUSTOMER_ID,LEASE_TENURE,TOWER_TENURE,FEATURE_TOWER_CLASS,TOWER_HEIGHT,WIND_SPEED,PORTFOLIO,TOWER_REGION,CLUSTER_NAME,ADDRESS_LINE_1,ADDRESS_LINE_2,ADDRESS_LINE_3,ADDRESS_LINE_4,POSTAL_CODE,CITY,STATE,PROVINCE,COUNTY,COUNTRY) VALUES ("+payload.BATCH_NUMBER+","+payload.TT_ID+","+payload.SO_TYPE+",to_date("+payload.SO_DATE+",'YYYY-MM-DD HH24:MI:SS'),"+payload.GLOBAL_SITE_ID+","+payload.SAP_ID+","+payload.SITE_ID+","+payload.SITE_NAME+","+payload.LEGAL_ENTITY+","+payload.CIRCLE+","+payload.CUSTOMER_ID+","+payload.LEASE_TENURE+","+payload.TOWER_TENURE+","+payload.FEATURE_TOWER_CLASS+","+payload.TOWER_HEIGHT+","+payload.WIND_SPEED+","+payload.PORTFOLIO+","+payload.TOWER_REGION+","+payload.CLUSTER_NAME+","+payload.ADDRESS_LINE_1+","+payload.ADDRESS_LINE_2+","+payload.ADDRESS_LINE_3+","+payload.ADDRESS_LINE_4+","+payload.POSTAL_CODE+","+payload.CITY+","+payload.STATE+","+payload.PROVINCE+","+payload.COUNTY+","+payload.COUNTRY+")";]]></expression-component>
			<logger message="#[flowVars.sql]" level="DEBUG" doc:name="Log Insert Script" />
		</foreach>
	</sub-flow>
	<flow name="successMail_SiteIdSub_Flow">
		<logger message="#['Flow has been completed successfully. Sending Email...']"
			level="INFO" doc:name="Log Sending Email" />
		<choice doc:name="Choice">
			<when expression="flowVars.flowName == 'TT_PROJ_SITE'">
				<set-variable variableName="interFaceName"
					value="#['Project Site creation from  TARANTULA to Oracle']"
					doc:name="projectSite" />
				<set-variable variableName="mailBody"
					value="#['Interface: '+flowVars.interFaceName+'\r\n\nRecords Processed for TTID '+flowVars.ttId+' : '+flowVars.totalRecords]"
					doc:name="mailBody" />
			</when>
			<when expression="flowVars.flowName == 'TT_PROJ_STATUS'">
				<set-variable variableName="interFaceName"
					value="#['Project Status from  TARANTULA to Oracle']" doc:name="projectStatus" />
				<set-variable variableName="mailBody"
					value="#['Interface: '+flowVars.interFaceName+'\r\n\nRecords Processed for TTID '+flowVars.ttId+' : '+flowVars.totalRecords]"
					doc:name="mailBody" />
			</when>
			<otherwise>
				<set-variable variableName="interFaceName"
					value="#['Purchase Requisition from Oracle to Tarantula']"
					doc:name="purchaseRequisition" />
				<set-variable variableName="mailBody"
					value="#['Interface: '+flowVars.interFaceName+'\r\n\nRecords Processed for PR LINE ID '+flowVars.prLineId+' : '+flowVars.totalRecords]"
					doc:name="mailBody" />
			</otherwise>
		</choice>
		<dw:transform-message doc:name="Transform Message">
			<dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
"to_address": p('emailID'),

"body": flowVars.mailBody,

"subject":'[' ++ p('current.environment') ++ '] [' ++ p('current.projectname') ++ '] [Success] Notification', 

"attachment_name":"attachment.txt",

"attachment_content": flowVars.mailBody
      
}  ]]></dw:set-payload>
		</dw:transform-message>
		<byte-array-to-object-transformer
			doc:name="Byte Array to Object" />
		<vm:outbound-endpoint exchange-pattern="one-way"
			path="atc.mule.email" doc:name="callEmailService_VM" />
		<logger message="#['Mail has been sent.']" level="INFO"
			doc:name="Logger" />
		<exception-strategy ref="exceptionhandlingChoice_Exception_Strategy"
			doc:name="Reference Exception Strategy" />
	</flow>

	<sub-flow name="project-Site-Creation-GetTotalRecords_Flow">
		<logger message="Inside the project-Site-Creation-GetTotalRecordsSub_Flow"
			level="INFO" doc:name="Log Inside GetTotalRecords Flow" />
		<set-variable variableName="lastUpdateDate"
			value="#[flowVars.ListOfLastUpdatedDate[0].date]" doc:name="lastUpdateDate" />
		<set-variable variableName="totalRecords"
			value="#[flowVars.ListOfLastUpdatedDate.size()]" doc:name="payloadSize" />

	</sub-flow>
	<sub-flow name="project-Site-Creation-siteId-FinalMessage-subFlow">
		<dw:transform-message doc:name="Transform Message">
			<dw:set-payload><![CDATA[%dw 1.0
%output application/json
---
{
	message 		: "Flow has been successfully completed",
	Interface		: "Project Site creation from  TARANTULA to Oracle",
	recordsProcessed: flowVars.totalRecords 
	when flowVars.totalRecords != null otherwise 'No records to update'
}]]></dw:set-payload>
		</dw:transform-message>
		<logger
			message="================End of Tarantula to Oracle ProjectSitecreationFlow================="
			level="INFO" doc:name="Log End of TT to Oracle Flow" />
	</sub-flow>

	<flow name="auditDataFlow">
		<logger
			message="#['Flow has been completed successfully. Sending Audit Data...']"
			level="INFO" doc:name="Log Sending Audit data" />
		<choice doc:name="Choice">
			<when expression="flowVars.flowName == 'TT_PROJ_SITE'">
				<set-variable variableName="interFaceName"
					value="#['Project Site creation from  TARANTULA to Oracle']"
					doc:name="projectSite" />

				<set-variable variableName="dataDetails"
					value="#['&quot;service&quot;: &quot;atc-esb-tarantula&quot;, &quot;TTID&quot;: &quot;'+flowVars.ttId+'&quot;, &quot;timestamp&quot;: &quot;' + new java.util.Date().toString() + '&quot;, &quot;Source Database&quot;: &quot;Tarantula&quot;,  &quot;Target Database&quot;: &quot;Oracle&quot;, &quot;Records Processed&quot;: &quot;' +flowVars.totalRecords+ '&quot;,&quot;Interface Name&quot;: &quot;' +flowVars.interFaceName+ '&quot;,&quot;status&quot;: &quot;Success&quot;']"
					doc:name="Set Data" />
				<expression-transformer
					expression="#[groovy:[ &quot;service&quot;: &quot;atc-esb-tarantula&quot;,&quot;timestamp&quot;: new java.util.Date().toString() , &quot;interface_number&quot;: &quot;&quot;+flowVars.interfaceNumber+&quot;&quot;, &quot;interface_type&quot;: &quot;&quot;+flowVars.interface_type+&quot;&quot;, &quot;requester_ip&quot;:&quot;&quot;+flowVars.ip+&quot;&quot;, &quot;status&quot;: [&quot;code&quot;: &quot;200&quot; , &quot;message&quot;: &quot;Success&quot;], &quot;data&quot;: &quot;\&quot;&quot; + dataDetails + &quot;\&quot;&quot;]]"
					doc:name="Build Audit Map" />
				<vm:outbound-endpoint exchange-pattern="one-way"
					path="atc.mule.audit" doc:name="VM" />
				<logger message="#['Data sent to for Audit']" level="DEBUG"
					doc:name="Debug - Log Audit" />
				<logger message="#['Data sent for Audit']" level="INFO"
					doc:name="Info - Log Audit" />

			</when>
			<when expression="flowVars.flowName == 'TT_PROJ_STATUS'">
				<set-variable variableName="interFaceName"
					value="#['Project Status from  TARANTULA to Oracle']" doc:name="projectStatus" />

				<set-variable variableName="dataDetails"
					value="#['&quot;service&quot;: &quot;atc-esb-tarantula&quot;, &quot;TTID&quot;: &quot;'+flowVars.ttId+'&quot;, &quot;timestamp&quot;: &quot;' + new java.util.Date().toString() + '&quot;, &quot;Source Database&quot;: &quot;Tarantula&quot;,  &quot;Target Database&quot;: &quot;Oracle&quot;,&quot;Records Processed&quot;: &quot;' +flowVars.totalRecords+ '&quot;,&quot;Interface Name&quot;: &quot;' +flowVars.interFaceName+ '&quot;,&quot;status&quot;: &quot;Success&quot;']"
					doc:name="Set Data" />
				<expression-transformer
					expression="#[groovy:[ &quot;service&quot;: &quot;atc-esb-tarantula&quot;,&quot;timestamp&quot;: new java.util.Date().toString() , &quot;interface_number&quot;: &quot;&quot;+flowVars.interfaceNumber+&quot;&quot;, &quot;interface_type&quot;: &quot;&quot;+flowVars.interface_type+&quot;&quot;, &quot;requester_ip&quot;:&quot;&quot;+flowVars.ip+&quot;&quot;, &quot;status&quot;: [&quot;code&quot;: &quot;200&quot; , &quot;message&quot;: &quot;Success&quot;], &quot;data&quot;: &quot;\&quot;&quot; + dataDetails + &quot;\&quot;&quot;]]"
					doc:name="Build Audit Map" />
				<vm:outbound-endpoint exchange-pattern="one-way"
					path="atc.mule.audit" doc:name="VM" />
				<logger message="#['Data sent to for Audit']" level="DEBUG"
					doc:name="Debug - Log Audit" />
				<logger message="#['Data sent for Audit']" level="INFO"
					doc:name="Info - Log Audit" />

			</when>
			<otherwise>
				<set-variable variableName="interFaceName"
					value="#['Purchase Requisition from Oracle to Tarantula']"
					doc:name="purchaseRequisition" />

				<set-variable variableName="dataDetails"
					value="#['&quot;service&quot;: &quot;atc-esb-tarantula&quot;, &quot;PR_LINE_ID&quot;: &quot;'+flowVars.prLineId+'&quot;, &quot;timestamp&quot;: &quot;' + new java.util.Date().toString() + '&quot;, &quot;Source Database&quot;: &quot;Oracle&quot;,  &quot;Target Database&quot;: &quot;Tarantula&quot;,&quot;Records Processed&quot;: &quot;' +flowVars.totalRecords+ '&quot;,&quot;Interface Name&quot;: &quot;' +flowVars.interFaceName+ '&quot;,&quot;status&quot;: &quot;Success&quot;']"
					doc:name="Set Data" />
				<expression-transformer
					expression="#[groovy:[ &quot;service&quot;: &quot;atc-esb-tarantula&quot;,&quot;timestamp&quot;: new java.util.Date().toString() , &quot;interface_number&quot;: &quot;&quot;+flowVars.interfaceNumber+&quot;&quot;, &quot;interface_type&quot;: &quot;&quot;+flowVars.interface_type+&quot;&quot;, &quot;requester_ip&quot;:&quot;&quot;+flowVars.ip+&quot;&quot;, &quot;status&quot;: [&quot;code&quot;: &quot;200&quot; , &quot;message&quot;: &quot;Success&quot;], &quot;data&quot;: &quot;\&quot;&quot; + dataDetails + &quot;\&quot;&quot;]]"
					doc:name="Build Audit Map" />
				<vm:outbound-endpoint exchange-pattern="one-way"
					path="atc.mule.audit" doc:name="VM" />
				<logger message="#['Data sent to for Audit']" level="DEBUG"
					doc:name="Debug - Log Audit" />
				<logger message="#['Data sent for Audit']" level="INFO"
					doc:name="Info - Log Audit" />

			</otherwise>
		</choice>
		<exception-strategy ref="exceptionhandlingChoice_Exception_Strategy"
			doc:name="Reference Exception Strategy" />
	</flow>

</mule>
