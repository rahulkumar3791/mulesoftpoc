<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:vm="http://www.mulesoft.org/schema/mule/vm"
	xmlns:scripting="http://www.mulesoft.org/schema/mule/scripting"
	xmlns:smtp="http://www.mulesoft.org/schema/mule/smtp" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation"
	xmlns:spring="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://www.mulesoft.org/schema/mule/vm http://www.mulesoft.org/schema/mule/vm/current/mule-vm.xsd
http://www.mulesoft.org/schema/mule/smtp http://www.mulesoft.org/schema/mule/smtp/current/mule-smtp.xsd
http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-current.xsd
http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/scripting http://www.mulesoft.org/schema/mule/scripting/current/mule-scripting.xsd">

	<choice-exception-strategy name="outboundChoiceExceptionStrategy">
		<catch-exception-strategy
			doc:name="Catch_Exception_Strategy:#[exception.causedBy(java.sql.SQLException)]"
			when="#[exception.causedBy(java.sql.SQLException)]">
			<logger
				message="[#[message.inboundProperties['X-Forwarded-For']]][GetOrders][Error occurred: #[exception.cause]]"
				level="ERROR" doc:name="Log Error Details" />
			<choice doc:name="Choice">
				<when expression="#[payload-type:java.lang.String]">
					<scripting:component doc:name="Validation Exception">
						<scripting:script engine="groovy">
							<scripting:text><![CDATA[throw new javax.xml.bind.ValidationException(payload)]]></scripting:text>

						</scripting:script>
					</scripting:component>
				</when>
				<otherwise>
					<scripting:component doc:name="Other Exception">
						<scripting:script engine="groovy">
							<scripting:text><![CDATA[return message.exceptionPayload.rootException]]></scripting:text>

						</scripting:script>
					</scripting:component>
				</otherwise>
			</choice>
			<async doc:name="Email Notification">
				<set-variable variableName="subject"
					value="[${current.environment}] [${current.projectname}][ERROR OCCURED]"
					doc:name="Set Email Subject" />
				<set-variable variableName="to" value="${smtp.to}"
					doc:name="Set Email To Address" />
				<set-variable variableName="body"
					value="Database Exception occurred at #[new java.util.Date().toString()]#[groovy:return &quot;\n\n&quot;]Here is the Exception#[groovy:return &quot;\n\n&quot;]#[exception.cause]#[groovy:return &quot;\n\n&quot;]Please check Mule logs and alerts for more details.#[groovy:return &quot;\n\n&quot;]"
					doc:name="Set Email Body" />
				<expression-transformer
					expression="#[groovy:[&quot;to_address&quot;:to,&quot;subject&quot;:subject,&quot;body&quot;:body]]"
					doc:name="Map Data" />
				<vm:outbound-endpoint exchange-pattern="one-way"
					path="atc.mule.email" doc:name="Call Core Email Service" />
			</async>
			<async doc:name="Audit Data">
				<set-variable variableName="dataDetails"
					value="#['&quot;requesterIp&quot;: &quot;' +message.inboundProperties['X-Forwarded-For']+'&quot;,&quot;Request Data&quot;:&quot;'+ requestData +'&quot;,&quot;status&quot;: &quot;Error&quot;' + '&quot; , &quot;exception&quot;: &quot;' + exception.cause +'&quot;']"
					doc:name="Set dataDetails Property" />
				<set-variable variableName="ip"
					value="#[message.inboundProperties['X-Forwarded-For']]" doc:name="Set IP Address" />

				<expression-transformer doc:name="Map Data"
					expression="#[groovy:[ &quot;service&quot;: &quot;atc-esb-tarantula&quot;, &quot;timestamp&quot;: new java.util.Date().toString(), &quot;interface_number&quot;: &quot;I-0102&quot;, &quot;interface_type&quot;: &quot;SOAP&quot;, &quot;requester_ip&quot;:ip, &quot;status&quot;: [&quot;code&quot;: &quot;S&quot; , &quot;id&quot;: &quot;&quot;, &quot;message&quot;: &quot;COMPLETE&quot;], &quot;data&quot;: &quot;\&quot;&quot; + dataDetails + &quot;\&quot;&quot;]]" />
				<vm:outbound-endpoint exchange-pattern="one-way"
					path="atc.mule.audit" doc:name="Call Core Audit Service" />
			</async>
		</catch-exception-strategy>
	</choice-exception-strategy>
	<choice-exception-strategy name="inboundChoiceExceptionStrategy">
		<catch-exception-strategy doc:name="Catch Exception Strategy"
			when="#[exception.causedBy(java.sql.SQLException)]">
			<logger
				message="[#[message.inboundProperties['X-Forwarded-For']]][SetOrders][Error occurred: #[exception.cause]]"
				level="ERROR" doc:name="Log Error Details" />
			<expression-component
				doc:name="Set SOAP Response With Exception Details in Status Description"><![CDATA[import com.atc.model.tarantula.InboundServiceResponse;
				import com.atc.model.tarantula.Status;
				InboundServiceResponse inboundResponse = new InboundServiceResponse();
				Status status = new Status();
				inboundResponse.setDescription("an audit log record");
				inboundResponse.setService("atc-esb-tarantula-inbound");
				inboundResponse.setTimestamp(new java.util.Date().toString());
				status.setCode("-1");
				status.setMessage("FAILURE");
				status.setException(exception.cause);
				inboundResponse.setStatus(status);
				payload = inboundResponse;
				]]>
			</expression-component>
			<async doc:name="Email Notification">
				<set-variable variableName="subject"
					value="[${current.environment}] [${current.projectname}][ERROR OCCURED]"
					doc:name="Set Email Subject" />
				<set-variable variableName="to" value="${smtp.to}"
					doc:name="Set Email To Address" />
				<set-variable variableName="body"
					value="Database Exception occurred at #[new java.util.Date().toString()]#[groovy:return &quot;\n\n&quot;]Here is the Exception#[groovy:return &quot;\n\n&quot;]#[exception.cause]#[groovy:return &quot;\n\n&quot;]Please check Mule logs and alerts for more details.#[groovy:return &quot;\n\n&quot;]"
					doc:name="Set Email Body" />
				<expression-transformer
					expression="#[groovy:[&quot;to_address&quot;:to,&quot;subject&quot;:subject,&quot;body&quot;:body]]"
					doc:name="Map Data" />
				<vm:outbound-endpoint exchange-pattern="one-way"
					path="atc.mule.email" doc:name="Call Core Email Service" />
			</async>
			<async doc:name="Audit Data">
				<set-variable variableName="dataDetails"
					value="#['&quot;requesterIp&quot;: &quot;' +message.inboundProperties['X-Forwarded-For']+'&quot;,&quot;Request Data&quot;:&quot;'+ requestData +'&quot;,&quot;status&quot;: &quot;Error&quot;' + '&quot; , &quot;exception&quot;: &quot;' + exception.cause +'&quot;']"
					doc:name="Set dataDetails Property" />
				<set-variable variableName="ip"
					value="#[message.inboundProperties['X-Forwarded-For']]" doc:name="Set IP Address" />

				<expression-transformer doc:name="Map Data"
					expression="#[groovy:[ &quot;service&quot;: &quot;atc-esb-tarantula&quot;, &quot;timestamp&quot;: new java.util.Date().toString(), &quot;interface_number&quot;: &quot;I-0102&quot;, &quot;interface_type&quot;: &quot;SOAP&quot;, &quot;requester_ip&quot;:ip, &quot;status&quot;: [&quot;code&quot;: &quot;S&quot; , &quot;id&quot;: &quot;&quot;, &quot;message&quot;: &quot;COMPLETE&quot;], &quot;data&quot;: &quot;\&quot;&quot; + dataDetails + &quot;\&quot;&quot;]]" />
				<vm:outbound-endpoint exchange-pattern="one-way"
					path="atc.mule.audit" doc:name="Call Core Audit Service" />
			</async>
		</catch-exception-strategy>
	</choice-exception-strategy>

	<choice-exception-strategy name="getLandLeaseDataChoiceExceptionStrategy">
		<catch-exception-strategy doc:name="Catch Exception Strategy"
			when="#[exception.causedBy(java.sql.SQLException)]">
			<logger
				message="[#[message.inboundProperties['X-Forwarded-For']]][GetLandLeaseData][Error occurred: #[exception.cause]]"
				level="ERROR" doc:name="Log Error Details" />
			<expression-component
				doc:name="Set SOAP Response With Exception Details in Status Description"><![CDATA[import com.atc.model.tarantula.GetLandLeaseDataServiceResponse;
import com.atc.model.tarantula.Header;
GetLandLeaseDataServiceResponse outboundResponse = new GetLandLeaseDataServiceResponse();
Header header = new Header();
header.setStatusCode("ERROR");
header.setStatusDescription(exception.cause);
outboundResponse.setHeader(header);
payload = outboundResponse;
				]]>
			</expression-component>
			<async doc:name="Email Notification">
				<set-variable variableName="subject"
					value="[${current.environment}] [${current.projectname}][ERROR OCCURED]"
					doc:name="Set Email Subject" />
				<set-variable variableName="to" value="${smtp.to}"
					doc:name="Set Email To Address" />
				<set-variable variableName="body"
					value="Database Exception occurred at #[new java.util.Date().toString()]#[groovy:return &quot;\n\n&quot;]Here is the Exception#[groovy:return &quot;\n\n&quot;]#[exception.cause]#[groovy:return &quot;\n\n&quot;]Please check Mule logs and alerts for more details.#[groovy:return &quot;\n\n&quot;]"
					doc:name="Set Email Body" />
				<expression-transformer
					expression="#[groovy:[&quot;to_address&quot;:to,&quot;subject&quot;:subject,&quot;body&quot;:body]]"
					doc:name="Map Data" />
				<vm:outbound-endpoint exchange-pattern="one-way"
					path="atc.mule.email" doc:name="Call Core Email Service" />
			</async>
			<async doc:name="Audit Data">
				<set-variable variableName="dataDetails"
					value="#['&quot;requesterIp&quot;: &quot;' +message.inboundProperties['X-Forwarded-For']+'&quot;,&quot;status&quot;: &quot;Error&quot;' + '&quot; , &quot;Request Data&quot;:&quot;'+ requestData +'&quot;,&quot;exception&quot;: &quot;' + exception.cause +'&quot;']"
					doc:name="Set dataDetails Property" />
				<set-variable variableName="ip"
					value="#[message.inboundProperties['X-Forwarded-For']]" doc:name="Set IP Address" />

				<expression-transformer doc:name="Map Data"
					expression="#[groovy:[ &quot;service&quot;: &quot;atc-esb-tarantula&quot;, &quot;timestamp&quot;: new java.util.Date().toString(), &quot;interface_number&quot;: &quot;I-0102&quot;, &quot;interface_type&quot;: &quot;SOAP&quot;, &quot;requester_ip&quot;:ip, &quot;status&quot;: [&quot;code&quot;: &quot;S&quot; , &quot;id&quot;: &quot;&quot;, &quot;message&quot;: &quot;COMPLETE&quot;], &quot;data&quot;: &quot;\&quot;&quot; + dataDetails + &quot;\&quot;&quot;]]" />
				<vm:outbound-endpoint exchange-pattern="one-way"
					path="atc.mule.audit" doc:name="Call Core Audit Service" />
			</async>
		</catch-exception-strategy>
	</choice-exception-strategy>

	<choice-exception-strategy name="getTenantLeaseDataChoiceExceptionStrategy">
		<catch-exception-strategy doc:name="Catch Exception Strategy"
			when="#[exception.causedBy(java.sql.SQLException)]">
			<logger
				message="[#[message.inboundProperties['X-Forwarded-For']]][GetTenantLeaseData][Error occurred: #[exception.cause]]"
				level="ERROR" doc:name="Log Error Details" />
			<expression-component
				doc:name="Set SOAP Response With Exception Details in Status Description"><![CDATA[import com.atc.model.tarantula.GetTenantLeaseDataServiceResponse;
import com.atc.model.tarantula.Header;
GetTenantLeaseDataServiceResponse outboundResponse = new GetTenantLeaseDataServiceResponse();
Header header = new Header();
header.setStatusCode("ERROR");
header.setStatusDescription(exception.cause);
outboundResponse.setHeader(header);
payload = outboundResponse;
				]]>
			</expression-component>
			<async doc:name="Email Notification">
				<set-variable variableName="subject"
					value="[${current.environment}] [${current.projectname}][ERROR OCCURED]"
					doc:name="Set Email Subject" />
				<set-variable variableName="to" value="${smtp.to}"
					doc:name="Set Email To Address" />
				<set-variable variableName="body"
					value="Database Exception occurred at #[new java.util.Date().toString()]#[groovy:return &quot;\n\n&quot;]Here is the Exception#[groovy:return &quot;\n\n&quot;]#[exception.cause]#[groovy:return &quot;\n\n&quot;]Please check Mule logs and alerts for more details.#[groovy:return &quot;\n\n&quot;]"
					doc:name="Set Email Body" />
				<expression-transformer
					expression="#[groovy:[&quot;to_address&quot;:to,&quot;subject&quot;:subject,&quot;body&quot;:body]]"
					doc:name="Map Data" />
				<vm:outbound-endpoint exchange-pattern="one-way"
					path="atc.mule.email" doc:name="Call Core Email Service" />
			</async>
			<async doc:name="Audit Data">
				<set-variable variableName="dataDetails"
					value="#['&quot;requesterIp&quot;: &quot;' +message.inboundProperties['X-Forwarded-For']+'&quot;,&quot;Request Data&quot;:&quot;'+ requestData +'&quot;,&quot;status&quot;: &quot;Error&quot;' + '&quot; , &quot;exception&quot;: &quot;' + exception.cause +'&quot;']"
					doc:name="Set dataDetails Property" />
				<set-variable variableName="ip"
					value="#[message.inboundProperties['X-Forwarded-For']]" doc:name="Set IP Address" />

				<expression-transformer doc:name="Map Data"
					expression="#[groovy:[ &quot;service&quot;: &quot;atc-esb-tarantula&quot;, &quot;timestamp&quot;: new java.util.Date().toString(), &quot;interface_number&quot;: &quot;I-0102&quot;, &quot;interface_type&quot;: &quot;SOAP&quot;, &quot;requester_ip&quot;:ip, &quot;status&quot;: [&quot;code&quot;: &quot;S&quot; , &quot;id&quot;: &quot;&quot;, &quot;message&quot;: &quot;COMPLETE&quot;], &quot;data&quot;: &quot;\&quot;&quot; + dataDetails + &quot;\&quot;&quot;]]" />
				<vm:outbound-endpoint exchange-pattern="one-way"
					path="atc.mule.audit" doc:name="Call Core Audit Service" />
			</async>
		</catch-exception-strategy>
	</choice-exception-strategy>

	<choice-exception-strategy
		name="getLandLeaseRentDataChoiceExceptionStrategy">
		<catch-exception-strategy doc:name="Catch Exception Strategy"
			when="#[exception.causedBy(java.sql.SQLException)]">
			<logger
				message="[#[message.inboundProperties['X-Forwarded-For']]][GetLandLeaseRentData][Error occurred: #[exception.cause]]"
				level="ERROR" doc:name="Log Error Details" />
			<expression-component
				doc:name="Set SOAP Response With Exception Details in Status Description"><![CDATA[import com.atc.model.tarantula.*;
import com.atc.model.tarantula.Header;
GetLandLeaseRentDataServiceResponse outboundResponse = new GetLandLeaseRentDataServiceResponse();
Header header = new Header();
header.setStatusCode("ERROR");
header.setStatusDescription(exception.cause);
outboundResponse.setHeader(header);
payload = outboundResponse;
				]]>
			</expression-component>
			<async doc:name="Email Notification">
				<set-variable variableName="subject"
					value="[${current.environment}] [${current.projectname}][ERROR OCCURED]"
					doc:name="Set Email Subject" />
				<set-variable variableName="to" value="${smtp.to}"
					doc:name="Set Email To Address" />
				<set-variable variableName="body"
					value="Database Exception occurred at #[new java.util.Date().toString()]#[groovy:return &quot;\n\n&quot;]Here is the Exception#[groovy:return &quot;\n\n&quot;]#[exception.cause]#[groovy:return &quot;\n\n&quot;]Please check Mule logs and alerts for more details.#[groovy:return &quot;\n\n&quot;]"
					doc:name="Set Email Body" />
				<expression-transformer
					expression="#[groovy:[&quot;to_address&quot;:to,&quot;subject&quot;:subject,&quot;body&quot;:body]]"
					doc:name="Map Data" />
				<vm:outbound-endpoint exchange-pattern="one-way"
					path="atc.mule.email" doc:name="Call Core Email Service" />
			</async>
			<async doc:name="Audit Data">
				<set-variable variableName="dataDetails"
					value="#['&quot;requesterIp&quot;: &quot;' +message.inboundProperties['X-Forwarded-For']+'&quot;,&quot;Request Data&quot;:&quot;'+ requestData +'&quot;,&quot;status&quot;: &quot;Error&quot;' + '&quot; , &quot;exception&quot;: &quot;' + exception.cause +'&quot;'"
					doc:name="Set dataDetails Property" />
				<set-variable variableName="ip"
					value="#[message.inboundProperties['X-Forwarded-For']]" doc:name="Set IP Address" />

				<expression-transformer doc:name="Map Data"
					expression="#[groovy:[ &quot;service&quot;: &quot;atc-esb-tarantula&quot;, &quot;timestamp&quot;: new java.util.Date().toString(), &quot;interface_number&quot;: &quot;I-0102&quot;, &quot;interface_type&quot;: &quot;SOAP&quot;, &quot;requester_ip&quot;:ip, &quot;status&quot;: [&quot;code&quot;: &quot;S&quot; , &quot;id&quot;: &quot;&quot;, &quot;message&quot;: &quot;COMPLETE&quot;], &quot;data&quot;: &quot;\&quot;&quot; + dataDetails + &quot;\&quot;&quot;]]" />
				<vm:outbound-endpoint exchange-pattern="one-way"
					path="atc.mule.audit" doc:name="Call Core Audit Service" />
			</async>
		</catch-exception-strategy>
	</choice-exception-strategy>
</mule>
