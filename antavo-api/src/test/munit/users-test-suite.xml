<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:munit="http://www.mulesoft.org/schema/mule/munit"
	xmlns:munit-tools="http://www.mulesoft.org/schema/mule/munit-tools" xmlns="http://www.mulesoft.org/schema/mule/core"
	xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xsi:schemaLocation="
		http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
		http://www.mulesoft.org/schema/mule/munit http://www.mulesoft.org/schema/mule/munit/current/mule-munit.xsd
		http://www.mulesoft.org/schema/mule/munit-tools  http://www.mulesoft.org/schema/mule/munit-tools/current/mule-munit-tools.xsd
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd">
	<munit:config name="users-test-suite.xml" />
	<munit:test name="users-test-suite-users-optInFlowTest" doc:id="d8dc5fe5-165a-42fb-848d-ee379aa07f01" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="66614d65-a725-410a-bb59-47427e800363" processor="http:request">
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://api/examples/usersOptInResponse.json',&quot;application/json&quot;)]

" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="04770a6c-8561-4652-84a0-e00ec4057684" >
				<munit:payload value="#[output application/json --- readUrl('classpath://api/examples/usersOptInRequest.json',&quot;application/json&quot;)]

" />
				<munit:attributes value='#[headers:{Authorization:"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyYWh1bDEwMCIsImV4cCI6MTYxNjQzNjkwMSwic3RhdHVzIjp0cnVlfQ.FspHb3VPc_bRLE2ZCcLfaTCPtxoz3TDqgdgAz6ezzD0",client_id:"a1624f88ff734734b6730f2e13271a6d",client_secret:"aC641618c684461986e7bBF1EF465fE6",profile_id:"rahul100" }]' />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to users-optInFlow" doc:id="d54543ba-e899-4969-99d9-95c3dcf342dc" name="users-optInFlow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="69acebc3-b02d-41f4-b9ca-80847e745577" is="#[MunitTools::notNullValue()]" expression="#[payload]"/>
			<ee:transform doc:name="Transform Message" doc:id="831cc557-e80c-4147-9be4-db9a800b27a2" >
				<ee:message >
				</ee:message>
				<ee:variables >
					<ee:set-variable variableName="expectedResult" ><![CDATA[%dw 2.0
output application/json
---
{
    "id": "test",
    "created_at": 1614368407,
    "email": "rajaram@zenni.com",
    "first_name": "Rajaram",
    "last_name": "Pasupathy",
    "status": "active",
    "score": 0,
    "spent": 0,
    "pending": 0,
    "image_url": null,
    "events": []
}]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
			<munit-tools:assert-that doc:name="Assert that" doc:id="a3f5460a-4150-4c38-b999-8d1ddd86e177" is="#[MunitTools::equalTo(vars.expectedResult)]" expression="#[payload]"/>
			<logger level="INFO" doc:name="Logger" doc:id="c31749df-e02d-4adf-90eb-aeafecee4713" message="############### Users optIn Test case Flow is completed ###############"/>
		</munit:validation>
	</munit:test>
	<munit:test name="users-test-suite-users-optOutFlowTest" doc:id="8031d643-0c21-491a-a8be-84d451c33e8d" description="Test">
		<munit:behavior >
			<munit-tools:mock-when doc:name="Mock when" doc:id="f24f40b5-6a63-4f5e-8d7f-6b4bd9a1b5db" processor="http:request">
				<munit-tools:then-return >
					<munit-tools:payload value="#[output application/json --- readUrl('classpath://api/examples/usersOptOutResponse.json',&quot;application/json&quot;)]

" mediaType="application/json" />
				</munit-tools:then-return>
			</munit-tools:mock-when>
		</munit:behavior>
		<munit:execution >
			<munit:set-event doc:name="Set Event" doc:id="7f5e520b-ac7f-436a-bfdf-d904b6b40b7b" >
				<munit:payload value="#[output application/json --- readUrl('classpath://api/examples/usersOptOutRequest.json',&quot;application/json&quot;)]

" />
				<munit:attributes value='#[headers:{Authorization:"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJzdWIiOiJyYWh1bDEwMCIsImV4cCI6MTYxNjQzNjkwMSwic3RhdHVzIjp0cnVlfQ.FspHb3VPc_bRLE2ZCcLfaTCPtxoz3TDqgdgAz6ezzD0",client_id:"a1624f88ff734734b6730f2e13271a6d",client_secret:"aC641618c684461986e7bBF1EF465fE6",profile_id:"rahul100" }]' />
			</munit:set-event>
			<flow-ref doc:name="Flow-ref to users-optOutFlow" doc:id="a46714a7-15ce-4e7e-a173-5b77c8ff125c" name="users-optOutFlow"/>
		</munit:execution>
		<munit:validation >
			<munit-tools:assert-that doc:name="Assert that" doc:id="1a09677e-2eeb-436f-9501-920d33ecab9e" is="#[MunitTools::notNullValue()]" expression="#[payload]"/>
			<ee:transform doc:name="Transform Message" doc:id="e4c22555-55f2-4f08-861c-e1ba28d22855" >
				<ee:message >
				</ee:message>
				<ee:variables >
					<ee:set-variable variableName="expResult" ><![CDATA[%dw 2.0
output application/json
---
{
    "id": "test",
    "created_at": 1614368407,
    "email": "rajaram@zenni.com",
    "first_name": "Rajaram",
    "last_name": "Pasupathy",
    "status": "opted_out",
    "score": 0,
    "spent": 0,
    "pending": 0,
    "image_url": null,
    "events": []
}]]></ee:set-variable>
				</ee:variables>
			</ee:transform>
			<munit-tools:assert-that doc:name="Assert that" doc:id="a23040c9-5a33-4765-bf9d-ce5f0e1fd015" is="#[MunitTools::equalTo(vars.expResult)]" expression="#[payload]"/>
			<logger level="INFO" doc:name="Logger" doc:id="87d31531-910c-457c-9113-a883c4015c19" message="############### Users optOut Test case Flow is completed ###############"/>
		</munit:validation>
	</munit:test>


</mule>
